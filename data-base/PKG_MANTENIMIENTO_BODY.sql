create or replace PACKAGE BODY PKG_SRES_MANTENIMIENTO AS

  --M CRITERIO-------------------------------
  PROCEDURE USP_PRC_MAN_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
      (SELECT C.ID_CRITERIO FROM T_GENM_CRITERIO C WHERE C.ID_CRITERIO = PI_ID_CRITERIO)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      vID := SQ_GENM_CRITERIO.NEXTVAL();
      INSERT INTO T_GENM_CRITERIO
      (ID_CRITERIO, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GENM_CRITERIO C SET
      C.NOMBRE = PI_NOMBRE,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CRITERIO = PI_ID_CRITERIO;
    END IF;
  END USP_PRC_MAN_CRITERIO;
  
  PROCEDURE USP_DEL_CRITERIO(
    PI_ID_CRITERIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_CRITERIO 
    SET FLAG_ESTADO = '0' 
    WHERE ID_CRITERIO = PI_ID_CRITERIO;
  END USP_DEL_CRITERIO;

  PROCEDURE USP_SEL_GET_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            NOMBRE
    FROM  T_GENM_CRITERIO
    WHERE ID_CRITERIO = PI_ID_CRITERIO; 
  END USP_SEL_GET_CRITERIO;

  PROCEDURE USP_SEL_LISTA_BUSQ_CRITERIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_CRITERIO C
                    WHERE LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  C.ID_CRITERIO,
                                C.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_CRITERIO C
                        WHERE LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_CRITERIO;
  
  PROCEDURE USP_SEL_ALL_CRITERIO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            NOMBRE
    FROM  T_GENM_CRITERIO
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_CRITERIO;  

------------------------------------------------------------
  
  -- M USUARIO --------------------------------------
  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_USUARIO U
                    WHERE (
                    LOWER(TRANSLATE(U.NOMBRES,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.APELLIDOS,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CORREO,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CELULAR,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%''
                    ) AND
                    FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  U.ID_USUARIO,
                                U.NOMBRES,
                                U.APELLIDOS,
                                U.CORREO,
                                U.TELEFONO,
                                U.ANEXO,
                                U.CELULAR,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_USUARIO U
                        WHERE (
                        LOWER(TRANSLATE(U.NOMBRES,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.APELLIDOS,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CORREO,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CELULAR,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%''
                        ) AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_USUARIO;

  PROCEDURE USP_UPD_CAMBIA_ESTADO_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PI_FLAG_ESTADO IN VARCHAR2,
    PI_UPD_USUARIO IN NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_USUARIO U SET
    U.FLAG_ESTADO = PI_FLAG_ESTADO,
    U.UPD_USUARIO = PI_UPD_USUARIO,
    U.UPD_FECHA = SYSDATE
    WHERE U.ID_USUARIO = PI_ID_USUARIO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_CAMBIA_ESTADO_USUARIO;

  PROCEDURE USP_MAN_GUARDA_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_NOMBRES VARCHAR2,
    PI_APELLIDOS VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_ANEXO VARCHAR2,
    PI_CELULAR VARCHAR2,
    PI_ID_INSTITUCION NUMBER,
    PI_ID_ROL NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT U.ID_USUARIO FROM T_GENM_USUARIO U WHERE U.ID_USUARIO = PI_ID_USUARIO)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      PI_ID_USUARIO := SQ_GENM_USUARIO.NEXTVAL();
      INSERT INTO T_GENM_USUARIO
      (ID_USUARIO, NOMBRES, APELLIDOS, CORREO, TELEFONO, ANEXO, CELULAR, ID_INSTITUCION, ID_ROL, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_USUARIO, PI_NOMBRES, PI_APELLIDOS, PI_CORREO, PI_TELEFONO, PI_ANEXO, PI_CELULAR, PI_ID_INSTITUCION, PI_ID_ROL, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_USUARIO U SET
      U.NOMBRES = PI_NOMBRES,
      U.APELLIDOS = PI_APELLIDOS,
      U.CORREO = PI_CORREO,
      U.TELEFONO = PI_TELEFONO,
      U.ANEXO = PI_ANEXO,
      U.CELULAR = PI_CELULAR,
      U.ID_INSTITUCION = PI_ID_INSTITUCION,
      U.ID_ROL = PI_ID_ROL
      WHERE U.ID_USUARIO = PI_ID_USUARIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_USUARIO;
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    U.ID_USUARIO,
    U.NOMBRES,
    U.APELLIDOS,
    U.CORREO,
    U.TELEFONO,
    U.ANEXO,
    U.CELULAR,
    U.ID_INSTITUCION,
    U.ID_ROL
    FROM T_GENM_USUARIO U
    WHERE U.ID_USUARIO = PI_ID_USUARIO;
  END USP_SEL_OBTIENE_USUARIO;

  -- M ROL --------------------------------------
  PROCEDURE USP_SEL_LISTA_ROL_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT R.ID_ROL, R.NOMBRE, R.FLAG_ESTADO
    FROM T_MAE_ROL R
    WHERE R.FLAG_ESTADO = PI_FLAG_ESTADO;
  END USP_SEL_LISTA_ROL_ESTADO;

  PROCEDURE USP_SEL_ALL_EVALUADOR(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_USUARIO,
            (NOMBRES || ' ' || APELLIDOS) NOMBRE_COMPLETO
    FROM  T_GENM_USUARIO
    WHERE ID_ROL = 2 AND FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_EVALUADOR;

  -- M REQUERIMIENTO ---------------
  PROCEDURE USP_PRC_MAN_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
      (SELECT R.ID_REQUERIMIENTO FROM T_GENM_REQUERIMIENTO R WHERE R.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      vID := SQ_GENM_REQUERIMIENTO.NEXTVAL();
      INSERT INTO T_GENM_REQUERIMIENTO
      (ID_REQUERIMIENTO, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GENM_REQUERIMIENTO R SET
      R.NOMBRE = PI_NOMBRE,
      R.UPD_USUARIO = PI_USUARIO_GUARDAR,
      R.UPD_FECHA = SYSDATE
      WHERE R.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    END IF;
  END USP_PRC_MAN_REQUERIMIENTO;
  
  PROCEDURE USP_DEL_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_REQUERIMIENTO
    SET FLAG_ESTADO = '0' 
    WHERE ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
  END USP_DEL_REQUERIMIENTO;

  PROCEDURE USP_SEL_GET_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_REQUERIMIENTO,
            NOMBRE
    FROM  T_GENM_REQUERIMIENTO
    WHERE ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO; 
  END USP_SEL_GET_REQUERIMIENTO;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_REQUERIMIENTO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_REQUERIMIENTO R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_REQUERIMIENTO,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_REQUERIMIENTO R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_REQUERIMIENTO;
  
  PROCEDURE USP_SEL_ALL_REQUERIMIENTO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_REQUERIMIENTO,
            NOMBRE
    FROM  T_GENM_REQUERIMIENTO
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_REQUERIMIENTO;

  -- M PROCESO ---------------
  PROCEDURE USP_UPD_PROCESO(
    PI_ID_PROCESO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
  BEGIN
    UPDATE T_MAE_PROCESO 
    SET NOMBRE = PI_NOMBRE,
        UPD_USUARIO = PI_USUARIO_GUARDAR,
        UPD_FECHA = SYSDATE
    WHERE ID_PROCESO = PI_ID_PROCESO;
  END USP_UPD_PROCESO;
  
  PROCEDURE USP_SEL_GET_PROCESO(
    PI_ID_PROCESO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_PROCESO,
            NOMBRE
    FROM  T_MAE_PROCESO
    WHERE ID_PROCESO = PI_ID_PROCESO; 
  END USP_SEL_GET_PROCESO;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_PROCESO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_PROCESO P
                    WHERE LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    P.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  P.ID_PROCESO,
                                P.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_PROCESO P
                        WHERE LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        P.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_PROCESO;
  
  -- M ETAPA ---------------
  PROCEDURE USP_UPD_ETAPA(
    PI_ID_ETAPA NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
  BEGIN
    UPDATE T_MAE_ETAPA 
    SET NOMBRE = PI_NOMBRE,
        UPD_USUARIO = PI_USUARIO_GUARDAR,
        UPD_FECHA = SYSDATE
    WHERE ID_ETAPA = PI_ID_ETAPA;
  END USP_UPD_ETAPA;
  
  PROCEDURE USP_SEL_GET_ETAPA(
    PI_ID_ETAPA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  E.ID_ETAPA,
            E.NOMBRE ETAPA,
            P.NOMBRE PROCESO
    FROM  T_MAE_ETAPA E
    LEFT JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
    WHERE E.ID_ETAPA = PI_ID_ETAPA; 
  END USP_SEL_GET_ETAPA;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_ETAPA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_ETAPA E
                    LEFT JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
                    WHERE 
                    (LOWER(TRANSLATE(E.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'') AND
                    E.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    
    IF PI_COLUMNA = 'ID_ETAPA' THEN
      vCOLUMNA := 'E.ID_ETAPA';
    ELSIF PI_COLUMNA = 'ETAPA' THEN
      vCOLUMNA := 'E.NOMBRE';
    ELSIF PI_COLUMNA = 'PROCESO' THEN
      vCOLUMNA := 'P.NOMBRE';
    ELSE
      vCOLUMNA := PI_COLUMNA;
    END IF;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  E.ID_ETAPA,
                                E.NOMBRE ETAPA,
                                P.NOMBRE PROCESO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_ETAPA E
                        LEFT JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
                        WHERE
                        (LOWER(TRANSLATE(E.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'') AND
                        E.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_ETAPA;

  -- M INSTITUCION ---------------
  PROCEDURE USP_SEL_OBTIENE_INSTITUCION_RUC(
    PI_RUC VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    I.ID_INSTITUCION,
    I.RUC,
    I.RAZON_SOCIAL,
    I.DOMICILIO_LEGAL,
    I.ID_SECTOR,
    I.FLAG_ESTADO
    FROM T_GENM_INSTITUCION I
    WHERE I.RUC = PI_RUC;
  END USP_SEL_OBTIENE_INSTITUCION_RUC;

  PROCEDURE USP_SEL_OBTIENE_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    I.ID_INSTITUCION,
    I.RUC,
    I.RAZON_SOCIAL,
    I.DOMICILIO_LEGAL,
    I.ID_SECTOR,
    I.FLAG_ESTADO
    FROM T_GENM_INSTITUCION I
    WHERE I.ID_INSTITUCION = PI_ID_INSTITUCION;
  END USP_SEL_OBTIENE_INSTITUCION;

  -- M ANNO -------------
  PROCEDURE USP_SEL_ALL_ANNO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_ANNO,
            NOMBRE
    FROM  T_MAE_ANNO 
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_ANNO;

END PKG_SRES_MANTENIMIENTO;
