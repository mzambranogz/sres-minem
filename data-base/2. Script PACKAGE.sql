prompt PL/SQL Developer Export User Objects for user SISSELLO@MYDB
prompt Created by ALFRE on jueves, 23 de Julio de 2020
set define off
spool Script PACKAGE.log

prompt
prompt Creating package PKG_SISSELLO_ADMIN
prompt ===============================
prompt
CREATE OR REPLACE PACKAGE SISSELLO."PKG_SISSELLO_ADMIN" AS

  PROCEDURE USP_SEL_USUARIO(
        PO  OUT SYS_REFCURSOR
    );
    
  PROCEDURE USP_SEL_USUARIO_CORREO(
      pCORREO  IN VARCHAR2,
      pCursor  OUT SYS_REFCURSOR
    );
    
END PKG_SISSELLO_ADMIN;
/

prompt
prompt Creating package PKG_SISSELLO_CRITERIO
prompt ==================================
prompt
CREATE OR REPLACE PACKAGE SISSELLO."PKG_SISSELLO_CRITERIO" AS
  PROCEDURE USP_SEL_BUSQ_CONVOCATORIA(
    PI_NRO_INFORME VARCHAR2,
    PI_NOMBRE VARCHAR2,
    PI_FECHA_INICIO DATE,
    PI_FECHA_FIN DATE,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_OBTIENE_CONVOCATORIA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_MAN_GUARDA_INSCRIPCION(
    PI_ID_INSCRIPCION IN OUT NUMBER,
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_OBTIENE_INSC_CONV_INST(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_INSCRQ_CONV_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_OBTIENE_INSCRQ(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_MAN_GUARDA_INSCRQ(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_ARCHIVO_CIFRADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_CRI_CONV(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_OBTIENE_CRI_CONV(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_INS_REGISTRA_INSCTRAZA(
    PI_ID_INSCRIPCION NUMBER,
    PI_DESCRIPCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_CASO_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CONVOCATORIA NUMBER, 
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_COMPONENTE_CASO(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_INDICADORDATA_ID(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_DEL_INDICADOR_DATA(
        PI_ID_CRITERIO IN NUMBER,
        PI_ID_CASO  IN NUMBER,
        PI_ID_COMPONENTE IN NUMBER,
        PI_ID_INSCRIPCION IN NUMBER,
        PI_ELIMINAR_INDICADOR IN VARCHAR2
  );
  
  PROCEDURE USP_SEL_FORM_PARAM_DET(
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_DATA_PARAM_DET(
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_CONV_CRI_CASO_DOC(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_FORMULA_PARAM(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_PARAM_DET_REL(
    PI_ID_PARAMETRO NUMBER,
    PI_PARAMETROS VARCHAR2,
    PI_DETALLES VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_MAN_DOCUMENTO_DATA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_ARCHIVO_TIPO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_DOCUMENTO_DATA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONV_CRI_CAS_INSC_DATA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_VERF_CONV_CRITERIO_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_FACTOR_PARAMETRO(
    PI_ID_FACTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_FACTOR_VALOR(
    PI_ID_FACTOR NUMBER,
    PI_SQL_WHERE VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_CONV_CRI_PUNTAJE(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_GUARDAR_EVA_CRITERIO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_EMISIONES_REDUCIDAS NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_OBTIENE_CONV_CRI_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_UPD_INSCRIPCION_EVA_CRI(
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_CRI_PUNTAJE(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONV_CRI_PUNTAJE(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_PUNTAJE NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_UPD_MOD_LOGO_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_LOGO VARCHAR2,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_UPD_MOD_DATOS_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_NOMBRE_COMERCIAL VARCHAR2,
    PI_DESCRIPCION VARCHAR2,
    PI_ID_SUBSECTOR_TIPOEMPRESA NUMBER,
    PI_ID_TRABAJADORES_CAMA NUMBER,
    PI_CANTIDAD NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_PRC_CONV_ETA_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_OBTIENE_CONV_ETA_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_UPD_EVA_CRI_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_SEL_PUNTAJE_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_RECONOCIMIENTO(
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_INSIGNIA NUMBER,
    PI_PUNTAJE NUMBER,
    PI_ID_ESTRELLA NUMBER,
    PI_EMISIONES NUMBER,
    PI_FLAG_MEJORACONTINUA VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_SEL_INSTITUCION_INSC(
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_ESTR_TRAB_CAMA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_TRABAJADORES_CAMA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
END PKG_SISSELLO_CRITERIO;

/

prompt
prompt Creating package PKG_SISSELLO_MANTENIMIENTO
prompt =======================================
prompt

CREATE OR REPLACE PACKAGE SISSELLO."PKG_SISSELLO_MANTENIMIENTO" AS

  
  PROCEDURE USP_PRC_MAN_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  );
  
  PROCEDURE USP_DEL_CRITERIO(
    PI_ID_CRITERIO NUMBER
  );

  PROCEDURE USP_SEL_GET_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_LISTA_BUSQ_CRITERIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_CRITERIO(
    PO_REF OUT SYS_REFCURSOR
  );

 
  PROCEDURE USP_MAN_GUARDA_CONVOCATORIA_CRITERIO_REQUERIMIENTO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_OBLIGATORIO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );


  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_LISTA_USUARIO_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR 
  );

  PROCEDURE USP_UPD_CAMBIA_ESTADO_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PI_FLAG_ESTADO IN VARCHAR2,
    PI_UPD_USUARIO IN NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_MAN_GUARDA_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_NOMBRES VARCHAR2,
    PI_APELLIDOS VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_ANEXO VARCHAR2,
    PI_CELULAR VARCHAR2,
    PI_ID_INSTITUCION NUMBER,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_OBTIENE_USUARIO_INSTITUCION_CORREO(
    PI_ID_INSTITUCION NUMBER,
    PI_CORREO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  
  PROCEDURE USP_SEL_LISTA_ROL_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_OBTIENE_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_ALL_EVALUADOR(
    PO_REF OUT SYS_REFCURSOR
  );

 
  PROCEDURE USP_SEL_LISTA_SECTOR_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_OBTIENE_SECTOR(
    PI_ID_SECTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_PRC_MAN_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  );
  
  PROCEDURE USP_DEL_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER
  );

  PROCEDURE USP_SEL_GET_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_BUSQ_REQUERIMIENTO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_REQUERIMIENTO(
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_UPD_PROCESO(
    PI_ID_PROCESO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  );
  
  PROCEDURE USP_SEL_GET_PROCESO(
    PI_ID_PROCESO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_BUSQ_PROCESO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_UPD_ETAPA(
    PI_ID_ETAPA NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  );
  
  PROCEDURE USP_SEL_GET_ETAPA(
    PI_ID_ETAPA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_BUSQ_ETAPA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_LISTA_INSTITUCION(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_ETAPA(
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_OBTIENE_INSTITUCION_RUC(
    PI_RUC VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_OBTIENE_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_ALL_ANNO(
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_PRC_MAN_CONVOCATORIA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_DESCRIPCION VARCHAR2,
    PI_FECHA_INICIO DATE,
    PI_FECHA_FIN DATE,
    PI_LIMITE_POSTULANTE NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_BUSQ_CONVOCAT(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_CONVOCATORIA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONVOCATORIA_REQ(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_CONVOCATORIA_CRI(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_CONVOCATORIA_EVA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_CONVOCATORIA_ETA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_DIAS VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_REQ(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_CRI(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_EVA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_ETA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_MAN_GUARDA_INSTITUCION(
    PI_ID_INSTITUCION IN OUT NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_DOMICILIO_LEGAL VARCHAR2,
    PI_ID_SECTOR NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_CRI_CAS_COMPONENTE(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_INDICADOR(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_PARAMETRO(
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_INDICADOR_ID(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_INDICADOR_FORM(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INDICADOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_INDICADOR_DATA(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INDICADOR NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_MAN_INDICADOR_DATA(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INDICADOR NUMBER,
    PI_ID_PARAMETRO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_VALOR VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_NEXT_ID_INDICADOR(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,    
    PI_ID_INSCRIPCION NUMBER,
    PO_ID_INDICADOR OUT NUMBER
  );
  
  PROCEDURE USP_SEL_VERIFICAR_INDICADOR(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,    
    PI_ID_INSCRIPCION NUMBER,
    PO_ROW OUT NUMBER
  );
  
  PROCEDURE USP_SEL_CRITERIO_CASO(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_CRITERIO_DOC(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONV_CRI_CASO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_PRC_CONV_CRI_CASO_DOC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LIST_CONV_CRI_CASO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_LIST_CONV_CRI_CASO_DOC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_LISTA_CONVOCAT_POS(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONV_EVA_POS(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_SEL_GET_CONV_EVA_POS(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_ALL_INSIGNIA(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONVOCATORIA_INSIG(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSIGNIA NUMBER,
    PI_PUNTAJE_MIN NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );

  PROCEDURE USP_SEL_LISTA_CONVOCAT_INSIG(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_SUBSECTOR_TIPOEMP(
    PI_ID_SECTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_TRABAJADOR_CAMA(
    PI_ID_SUBSECTOR_TIPOEMPRESA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_LISTA_ESTRELLA(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_ALL_SECTOR(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_PRC_CONV_ESTREL_TRAB(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ESTRELLA NUMBER,
    PI_ID_TRABAJADORES_CAMA NUMBER,
    PI_EMISIONES_MIN NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_LISTA_CONV_EST_TRAB(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
END PKG_SISSELLO_MANTENIMIENTO;

/

prompt
prompt Creating package PKG_SISSELLO_VERIFICACION
prompt =====================================
prompt
CREATE OR REPLACE PACKAGE SISSELLO."PKG_SISSELLO_VERIFICACION" AS
  PROCEDURE USP_INS_REGISTRA_CONVOCATORIATRAZABILIDAD(
    PI_ID_CONVOCATORIA NUMBER,
    PI_DESCRIPCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_SEL_OBTIENE_ULT_CONV(
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_RECONOCIMIENTO_MEJORA(
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );

  PROCEDURE USP_SEL_LISTA_INSC_CONV_EVA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_EVALUACION(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_GET_ADMIN(
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_SEL_BUSQ_INSCRIPCION (
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_RAZON_SOCIAL_INSTITUCION VARCHAR2,
    PI_NOMBRES_APELLIDOS_USUARIO VARCHAR2,
    PI_ID_USUARIO NUMBER,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  );
  
  PROCEDURE USP_UPD_EVAL_INSCRIPCION (
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
  
  PROCEDURE USP_UPD_EVAL_INSC_REQ (
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_VALIDO NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  );
END PKG_SISSELLO_VERIFICACION;

/

prompt
prompt Creating package body PKG_SISSELLO_ADMIN
prompt ====================================
prompt
CREATE OR REPLACE PACKAGE BODY SISSELLO."PKG_SISSELLO_ADMIN" AS

  PROCEDURE USP_SEL_USUARIO(
        PO  OUT SYS_REFCURSOR
    ) AS
  BEGIN
    OPEN PO FOR
    SELECT * FROM T_GENM_USUARIO;
  END USP_SEL_USUARIO;
  
  PROCEDURE USP_SEL_USUARIO_CORREO(
        pCORREO  IN VARCHAR2,
        pCURSOR  OUT SYS_REFCURSOR
    ) AS
    BEGIN
      OPEN pCURSOR FOR
      SELECT
      ID_USUARIO, NOMBRES, APELLIDOS, CORREO, CONTRASENA,
      TELEFONO, ANEXO, CELULAR, ID_INSTITUCION, ID_ROL,
      FLAG_ESTADO, REG_USUARIO, REG_FECHA, UPD_USUARIO, UPD_FECHA
      FROM T_GENM_USUARIO
      WHERE CORREO = pCORREO;
    END USP_SEL_USUARIO_CORREO;

END PKG_SISSELLO_ADMIN;

/

prompt
prompt Creating package body PKG_SISSELLO_CRITERIO
prompt =======================================
prompt
CREATE OR REPLACE PACKAGE BODY SISSELLO."PKG_SISSELLO_CRITERIO" AS
  PROCEDURE USP_SEL_BUSQ_CONVOCATORIA(
    PI_NRO_INFORME VARCHAR2,
    PI_NOMBRE VARCHAR2,
    PI_FECHA_INICIO DATE,
    PI_FECHA_FIN DATE,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_CONVOCATORIA C INNER JOIN
                    T_MAE_ETAPA E ON C.ID_ETAPA = E.ID_ETAPA
                    WHERE ' ||
                    CASE
                      WHEN PI_NRO_INFORME IS NOT NULL THEN
                      'LOWER(TRANSLATE(C.NRO_INFORME,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_NRO_INFORME ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND '
                    END ||
                    'LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_NOMBRE ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND ' ||
                    CASE
                      WHEN PI_FECHA_INICIO IS NOT NULL AND PI_FECHA_FIN IS NOT NULL THEN
                      '(
                      TO_DATE(C.FECHA_INICIO) BETWEEN TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''') AND TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''') OR
                      TO_DATE(C.FECHA_FIN) BETWEEN TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''') AND TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''')
                      ) AND '
                      WHEN PI_FECHA_INICIO IS NOT NULL AND PI_FECHA_FIN IS NULL THEN
                      '(TO_DATE(C.FECHA_INICIO) >= TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''') OR TO_DATE(C.FECHA_FIN) >= TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''')) AND '
                      WHEN PI_FECHA_INICIO IS NULL AND PI_FECHA_FIN IS NOT NULL THEN
                      '(TO_DATE(C.FECHA_INICIO) <= TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''') OR TO_DATE(C.FECHA_FIN) <= TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''')) AND '
                    END ||
                    'C.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    
    vCOLUMNA := 'C.' || PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                          SELECT  C.ID_CONVOCATORIA,
                                  C.NOMBRE,
                                  C.DESCRIPCION,
                                  C.FECHA_INICIO,
                                  C.FECHA_FIN,
                                  C.LIMITE_POSTULANTE,
                                  C.NRO_INFORME,
                                  C.ID_ETAPA,
                                  E.NOMBRE AS "NOMBRE_ETAPA",
                                  C.FLAG_ESTADO,
                                  ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                  || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                  || vPAGINA_ACTUAL || ' AS PAGINA,'
                                  || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                  || vTOTAL_REG || ' AS TOTAL_REGISTROS
                          FROM T_GENM_CONVOCATORIA C INNER JOIN
                          T_MAE_ETAPA E ON C.ID_ETAPA = E.ID_ETAPA
                          WHERE ' ||
                          CASE
                            WHEN PI_NRO_INFORME IS NOT NULL THEN
                            'LOWER(TRANSLATE(C.NRO_INFORME,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_NRO_INFORME ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND '
                          END ||
                          'LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_NOMBRE ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND ' ||
                          CASE
                            WHEN PI_FECHA_INICIO IS NOT NULL AND PI_FECHA_FIN IS NOT NULL THEN
                            '(
                            TO_DATE(C.FECHA_INICIO) BETWEEN TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''') AND TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''') OR
                            TO_DATE(C.FECHA_FIN) BETWEEN TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''') AND TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''')
                            ) AND '
                            WHEN PI_FECHA_INICIO IS NOT NULL AND PI_FECHA_FIN IS NULL THEN
                            '(TO_DATE(C.FECHA_INICIO) >= TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''') OR TO_DATE(C.FECHA_FIN) >= TO_DATE(''' || TO_CHAR(PI_FECHA_INICIO, 'DD/MM/YYYY') || ''')) AND '
                            WHEN PI_FECHA_INICIO IS NULL AND PI_FECHA_FIN IS NOT NULL THEN
                            '(TO_DATE(C.FECHA_INICIO) <= TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''') OR TO_DATE(C.FECHA_FIN) <= TO_DATE(''' || TO_CHAR(PI_FECHA_FIN, 'DD/MM/YYYY') || ''')) AND '
                          END ||
                          'C.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_BUSQ_CONVOCATORIA;
  
  PROCEDURE USP_SEL_OBTIENE_CONVOCATORIA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_CONVOCATORIA,
    C.NOMBRE,
    C.DESCRIPCION,
    C.FECHA_INICIO,
    C.FECHA_FIN,
    C.LIMITE_POSTULANTE,
    C.NRO_INFORME,
    C.ID_ETAPA, --ADD
    C.FLAG_ESTADO
    FROM T_GENM_CONVOCATORIA C
    WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA;
  END USP_SEL_OBTIENE_CONVOCATORIA;
  
  PROCEDURE USP_MAN_GUARDA_INSCRIPCION(
    PI_ID_INSCRIPCION IN OUT NUMBER,
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    
    SELECT MAX(ID_INSCRIPCION) INTO vID
    FROM T_GENM_INSCRIPCION
    WHERE ID_INSCRIPCION = PI_ID_INSCRIPCION;
    
    IF vID IS NULL THEN
      PI_ID_INSCRIPCION := SQ_GENM_INSCRIPCION.NEXTVAL();
      
      INSERT INTO T_GENM_INSCRIPCION
      (ID_INSCRIPCION, ID_CONVOCATORIA, ID_INSTITUCION, REG_USUARIO)
      VALUES
      (PI_ID_INSCRIPCION, PI_ID_CONVOCATORIA, PI_ID_INSTITUCION, PI_UPD_USUARIO);
    ELSE
      UPDATE T_GENM_INSCRIPCION I SET
      I.UPD_USUARIO = PI_UPD_USUARIO,
      I.UPD_FECHA = SYSDATE
      WHERE
      I.ID_INSCRIPCION = PI_ID_INSCRIPCION;
    END IF;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_INSCRIPCION;
  
  PROCEDURE USP_SEL_OBTIENE_INSC_CONV_INST(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    I.ID_INSCRIPCION,
    I.ID_CONVOCATORIA,
    I.ID_INSTITUCION,
    I.FLAG_ANULAR,
    I.NRO_INFORME_PRELIMINAR,
    I.ID_TIPO_EVALUACION, --ADD
    I.OBSERVACION, --ADD
    I.FLAG_ESTADO
    FROM T_GENM_INSCRIPCION I
    WHERE I.ID_CONVOCATORIA = PI_ID_CONVOCATORIA
    AND I.ID_INSTITUCION = PI_ID_INSTITUCION;
  END USP_SEL_OBTIENE_INSC_CONV_INST;  
  
  PROCEDURE USP_SEL_LISTA_INSCRQ_CONV_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    R.ID_REQUERIMIENTO,
    R.NOMBRE AS "NOMBRE_REQUERIMIENTO",
    R.FLAG_ESTADO AS "FLAG_ESTADO_REQUERIMIENTO",
    IR.ARCHIVO_BASE,
    IR.ARCHIVO_CIFRADO,
    IR.VALIDO AS "VALIDO",
    IR.OBSERVACION,
    I.ID_INSTITUCION
    FROM T_GENM_REQUERIMIENTO R INNER JOIN
    T_GEND_CONVOCATORIA_REQUERIM CR ON R.ID_REQUERIMIENTO = CR.ID_REQUERIMIENTO AND R.FLAG_ESTADO = '1' LEFT JOIN
    T_GEND_INSCRIPCION_REQUERIR IR ON CR.ID_CONVOCATORIA = IR.ID_CONVOCATORIA AND CR.ID_REQUERIMIENTO = IR.ID_REQUERIMIENTO AND IR.ID_INSCRIPCION = PI_ID_INSCRIPCION LEFT JOIN
    T_GENM_INSCRIPCION I ON IR.ID_INSCRIPCION = I.ID_INSCRIPCION
    WHERE CR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA
    AND CR.FLAG_ESTADO = '1';
  END USP_SEL_LISTA_INSCRQ_CONV_INSC;
  
  PROCEDURE USP_SEL_OBTIENE_INSCRQ(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    IR.ID_CONVOCATORIA,
    IR.ID_INSCRIPCION,
    IR.ID_REQUERIMIENTO,
    IR.ARCHIVO_BASE,
    IR.ARCHIVO_CIFRADO,
    IR.VALIDO AS "VALIDO",
    IR.OBSERVACION
    FROM T_GEND_INSCRIPCION_REQUERIR IR
    WHERE
    IR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
    IR.ID_INSCRIPCION = PI_ID_INSCRIPCION AND
    IR.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
  END USP_SEL_OBTIENE_INSCRQ;
  
  PROCEDURE USP_MAN_GUARDA_INSCRQ(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_ARCHIVO_CIFRADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  vRegistros NUMBER;
  BEGIN
    SELECT COUNT(1) INTO vRegistros
    FROM T_GEND_INSCRIPCION_REQUERIR IR
    WHERE
    IR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
    IR.ID_INSCRIPCION = PI_ID_INSCRIPCION AND
    IR.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    
    IF vRegistros = 0 THEN
      INSERT INTO T_GEND_INSCRIPCION_REQUERIR
      (ID_CONVOCATORIA, ID_INSCRIPCION, ID_REQUERIMIENTO, ARCHIVO_BASE, ARCHIVO_CIFRADO, REG_USUARIO)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_INSCRIPCION, PI_ID_REQUERIMIENTO, PI_ARCHIVO_BASE, PI_ARCHIVO_CIFRADO, PI_UPD_USUARIO);
    ELSE
      UPDATE T_GEND_INSCRIPCION_REQUERIR IR SET
      IR.ARCHIVO_BASE = PI_ARCHIVO_BASE,
      IR.ARCHIVO_CIFRADO = PI_ARCHIVO_CIFRADO,
      IR.UPD_FECHA = SYSDATE,
      IR.UPD_USUARIO = PI_UPD_USUARIO
      WHERE
      IR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
      IR.ID_INSCRIPCION = PI_ID_INSCRIPCION AND
      IR.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    END IF;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_INSCRQ;
  
  PROCEDURE USP_SEL_LISTA_CRI_CONV(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_CRITERIO,
    C.NOMBRE,
    C.ARCHIVO_BASE,
    C.FLAG_ESTADO,
    ((SELECT COUNT(*) FROM T_GEND_CONV_CRI_CASO_INSC_DATA INSD WHERE INSD.ID_CRITERIO = CR.ID_CRITERIO AND INSD.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND INSD.ID_INSCRIPCION = PI_ID_INSCRIPCION)) INGRESO_DATOS
    FROM T_GEND_CONVOCATORIA_CRITERIO CR INNER JOIN
    T_GENM_CRITERIO C ON CR.ID_CRITERIO = C.ID_CRITERIO AND CR.FLAG_ESTADO = C.FLAG_ESTADO
    WHERE
    CR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
    CR.FLAG_ESTADO = '1';
  END USP_SEL_LISTA_CRI_CONV;
  
  PROCEDURE USP_SEL_OBTIENE_CRI_CONV(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_CRITERIO,
    C.NOMBRE,
    C.ARCHIVO_BASE,
    C.FLAG_ESTADO
    FROM T_GEND_CONVOCATORIA_CRITERIO CR INNER JOIN
    T_GENM_CRITERIO C ON CR.ID_CRITERIO = C.ID_CRITERIO AND CR.FLAG_ESTADO = C.FLAG_ESTADO
    WHERE
    CR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
    CR.ID_CRITERIO = PI_ID_CRITERIO AND
    CR.FLAG_ESTADO = '1';
  END USP_SEL_OBTIENE_CRI_CONV;
  
  PROCEDURE USP_INS_REGISTRA_INSCTRAZA(
    PI_ID_INSCRIPCION NUMBER,
    PI_DESCRIPCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    vID := SQ_GEND_INSCRIPCION_TRAZA.NEXTVAL();
    
    INSERT INTO T_GEND_INSCRIPCION_TRAZA
    (ID_INSCRIPCION, ID_TRAZABILIDAD, DESCRIPCION, REG_USUARIO)
    VALUES
    (PI_ID_INSCRIPCION, vID, PI_DESCRIPCION, PI_UPD_USUARIO);
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_REGISTRA_INSCTRAZA;
  
  PROCEDURE USP_SEL_LISTA_CASO_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_CASO,
    C.NOMBRE,
    C.ID_CRITERIO,
    C.FLAG_ESTADO
    FROM  T_GEND_CONV_CRI_CASO CCC LEFT JOIN 
    T_GENM_CASO C ON CCC.ID_CASO = C.ID_CASO AND CCC.ID_CRITERIO = C.ID_CRITERIO
    WHERE CCC.ID_CRITERIO = PI_ID_CRITERIO AND CCC.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND CCC.FLAG_ESTADO = '1'
    ORDER BY CCC.ID_CASO ASC;
  END USP_SEL_LISTA_CASO_CRITERIO;
  
  PROCEDURE USP_SEL_LISTA_COMPONENTE_CASO(
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_COMPONENTE,
    C.NOMBRE,
    C.INCREMENTABLE,
    C.ID_CASO,
    C.ID_CRITERIO,
    C.FLAG_ESTADO
    FROM T_GENM_COMPONENTE C
    WHERE C.ID_CASO = PI_ID_CASO;
  END USP_SEL_LISTA_COMPONENTE_CASO;
  
  PROCEDURE USP_DEL_INDICADOR_DATA(
        PI_ID_CRITERIO IN NUMBER,
        PI_ID_CASO  IN NUMBER,
        PI_ID_COMPONENTE IN NUMBER,
        PI_ID_INSCRIPCION IN NUMBER,
        PI_ELIMINAR_INDICADOR IN VARCHAR2
  )IS
        vSql            VARCHAR2(250);
  BEGIN
        vSql := 'UPDATE T_MAEM_INDICADOR_DATA SET FLAG_ESTADO = ''0'' WHERE ID_CRITERIO ='||PI_ID_CRITERIO||' AND ID_CASO = '||PI_ID_CASO||' AND ID_COMPONENTE = '||PI_ID_COMPONENTE||' AND ID_INSCRIPCION = '||PI_ID_INSCRIPCION||' AND ID_INDICADOR IN ('||PI_ELIMINAR_INDICADOR||')';
        EXECUTE IMMEDIATE vSql;
  END USP_DEL_INDICADOR_DATA;
  
  PROCEDURE USP_SEL_INDICADORDATA_ID(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  DISTINCT ID_CRITERIO, ID_CASO, ID_COMPONENTE, ID_INDICADOR
    FROM    T_MAEM_INDICADOR_DATA
    WHERE   ID_CRITERIO = PI_ID_CRITERIO AND ID_CASO = PI_ID_CASO AND ID_COMPONENTE = PI_ID_COMPONENTE AND FLAG_ESTADO = '1'            
    ORDER BY ID_INDICADOR ASC;
  END USP_SEL_INDICADORDATA_ID;
  
  PROCEDURE USP_SEL_FORM_PARAM_DET(
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
      OPEN PO_REF FOR
      SELECT  *
      FROM    T_MAED_PARAMETRO
      WHERE ID_PARAMETRO = PI_ID_PARAMETRO AND FLAG_ESTADO = '1';
  END USP_SEL_FORM_PARAM_DET;
  
  PROCEDURE USP_SEL_DATA_PARAM_DET(
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
      OPEN PO_REF FOR
      SELECT  *
      FROM    T_MAED_PARAMETRO
      WHERE ID_PARAMETRO = PI_ID_PARAMETRO AND FLAG_ESTADO = '1';
  END USP_SEL_DATA_PARAM_DET;
  
  PROCEDURE USP_SEL_CONV_CRI_CASO_DOC(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
      OPEN PO_REF FOR
      SELECT
      D.ID_DOCUMENTO,
      D.ID_CRITERIO,
      D.NOMBRE,
      D.DESCRIPCION,
      CCCD.ID_CONVOCATORIA,
      CCCD.ID_CASO
      FROM    T_GEND_CONV_CRI_CASO_DOC CCCD LEFT JOIN
      T_GENM_DOCUMENTO D ON CCCD.ID_DOCUMENTO = D.ID_DOCUMENTO AND CCCD.ID_CRITERIO = D.ID_CRITERIO
      WHERE CCCD.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND CCCD.ID_CRITERIO = PI_ID_CRITERIO AND CCCD.ID_CASO = PI_ID_CASO AND CCCD.FLAG_ESTADO = '1';
  END USP_SEL_CONV_CRI_CASO_DOC;
  
  PROCEDURE USP_SEL_GET_FORMULA_PARAM(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAEM_FORMULA_PARAMETRO
    WHERE   ID_CRITERIO = PI_ID_CRITERIO AND ID_CASO = PI_ID_CASO AND ID_COMPONENTE = PI_ID_COMPONENTE AND ID_PARAMETRO = PI_ID_PARAMETRO;
  END USP_SEL_GET_FORMULA_PARAM;
  
  PROCEDURE USP_SEL_GET_PARAM_DET_REL(
    PI_ID_PARAMETRO NUMBER,
    PI_PARAMETROS VARCHAR2,
    PI_DETALLES VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    PD.ID_DETALLE,
    PD.NOMBRE,
    PD.ID_PARAMETRO
    FROM    T_MAED_PARAMETRO_RELACION PDR LEFT JOIN
    T_MAED_PARAMETRO PD ON PDR.ID_PARAMETRO = PD.ID_PARAMETRO AND PDR.ID_DETALLE = PD.ID_DETALLE
    WHERE PDR.ID_PARAMETRO = PI_ID_PARAMETRO AND PDR.PARAMETROS = PI_PARAMETROS AND PDR.DETALLES = PI_DETALLES AND PDR.FLAG_ESTADO = '1';
  END USP_SEL_GET_PARAM_DET_REL;
  
  PROCEDURE USP_PRC_MAN_DOCUMENTO_DATA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_ARCHIVO_TIPO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  )IS
        vCONT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO vCONT 
    FROM T_GEND_CONV_CRI_CASO_DOC_INSC
    WHERE ID_CRITERIO = PI_ID_CRITERIO 
          AND ID_CASO = PI_ID_CASO
          AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
          AND ID_DOCUMENTO = PI_ID_DOCUMENTO
          AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
          
    IF vCONT = 0 THEN 
      INSERT INTO T_GEND_CONV_CRI_CASO_DOC_INSC (ID_CONVOCATORIA, ID_CRITERIO, ID_CASO, ID_DOCUMENTO, ID_INSCRIPCION, ARCHIVO_BASE, ARCHIVO_TIPO, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_CASO, PI_ID_DOCUMENTO, PI_ID_INSCRIPCION, PI_ARCHIVO_BASE, PI_ARCHIVO_TIPO, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_CRI_CASO_DOC_INSC
      SET    ARCHIVO_BASE = PI_ARCHIVO_BASE,
             ARCHIVO_TIPO = PI_ARCHIVO_TIPO,
             UPD_USUARIO = PI_USUARIO_GUARDAR,
             UPD_FECHA = SYSDATE
      WHERE  ID_CRITERIO = PI_ID_CRITERIO 
             AND ID_CASO = PI_ID_CASO
             AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
             AND ID_DOCUMENTO = PI_ID_DOCUMENTO
             AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;      
  END USP_PRC_MAN_DOCUMENTO_DATA;
  
  PROCEDURE USP_SEL_DOCUMENTO_DATA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_GEND_CONV_CRI_CASO_DOC_INSC
    WHERE   ID_CRITERIO = PI_ID_CRITERIO 
            AND ID_CASO = PI_ID_CASO
            AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
            AND ID_DOCUMENTO = PI_ID_DOCUMENTO
            AND ID_INSCRIPCION = PI_ID_INSCRIPCION
            AND FLAG_ESTADO = '1';
  END USP_SEL_DOCUMENTO_DATA;
  
  PROCEDURE USP_PRC_CONV_CRI_CAS_INSC_DATA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  )IS
        vCONT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO vCONT 
    FROM T_GEND_CONV_CRI_CASO_INSC_DATA
    WHERE ID_CRITERIO = PI_ID_CRITERIO 
          AND ID_CASO = PI_ID_CASO
          AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
          AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
          
    IF vCONT = 0 THEN 
      INSERT INTO T_GEND_CONV_CRI_CASO_INSC_DATA (ID_CONVOCATORIA, ID_CRITERIO, ID_CASO, ID_INSCRIPCION, INGRESO_DATOS, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_CASO, PI_ID_INSCRIPCION, '1',PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_CRI_CASO_INSC_DATA
      SET    INGRESO_DATOS = '1',
             UPD_USUARIO = PI_USUARIO_GUARDAR,
             UPD_FECHA = SYSDATE
      WHERE  ID_CRITERIO = PI_ID_CRITERIO 
             AND ID_CASO = PI_ID_CASO
             AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
             AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;      
  END USP_PRC_CONV_CRI_CAS_INSC_DATA;
  
  PROCEDURE USP_SEL_VERF_CONV_CRITERIO_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_CASO,
    C.NOMBRE,
    C.ID_CRITERIO,
    C.FLAG_ESTADO
    FROM    T_GEND_CONV_CRI_CASO_INSC_DATA CCID LEFT JOIN
    T_GENM_CASO C ON CCID.ID_CASO = C.ID_CASO AND CCID.ID_CRITERIO = C.ID_CRITERIO 
    WHERE   CCID.ID_CRITERIO = PI_ID_CRITERIO 
            AND CCID.ID_CONVOCATORIA = PI_ID_CONVOCATORIA
            AND CCID.ID_INSCRIPCION = PI_ID_INSCRIPCION
            AND CCID.FLAG_ESTADO = '1';
  END USP_SEL_VERF_CONV_CRITERIO_INSC;

  PROCEDURE USP_SEL_FACTOR_PARAMETRO(
        PI_ID_FACTOR NUMBER,
        PO_REF OUT SYS_REFCURSOR
  )
  AS
  BEGIN
        OPEN PO_REF FOR
        SELECT  FP.*,
                (SELECT COUNT(1)
                FROM    T_MAEM_FACTOR_PARAMETRO FP
                WHERE   FP.ID_FACTOR = PI_ID_FACTOR
                        AND FP.ID_PARAMETRO IS NOT NULL) NUMERO_PARAMETROS
        FROM    T_MAEM_FACTOR F,
                T_MAEM_FACTOR_PARAMETRO FP
        WHERE   F.ID_FACTOR = PI_ID_FACTOR
                AND F.ID_FACTOR = FP.ID_FACTOR
                AND FP.ID_PARAMETRO IS NOT NULL
                AND FP.FLAG_ESTADO = '1'
        ORDER BY FP.ORDEN;

  END USP_SEL_FACTOR_PARAMETRO;
  
  PROCEDURE USP_SEL_FACTOR_VALOR(
        PI_ID_FACTOR NUMBER,
        PI_SQL_WHERE VARCHAR2,
        PO_REF OUT SYS_REFCURSOR
  )
  AS
        V_SQL VARCHAR2(4000);
  BEGIN
        V_SQL := 'SELECT  *
                FROM    T_MAEM_FACTOR_DATA F
                WHERE   F.ID_FACTOR = ' || TO_CHAR(PI_ID_FACTOR) || ' ';
        V_SQL := V_SQL || PI_SQL_WHERE;

        OPEN PO_REF FOR V_SQL;
  END USP_SEL_FACTOR_VALOR;

  PROCEDURE USP_SEL_CONV_CRI_PUNTAJE(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  CCP.ID_CONVOCATORIA, CCP.ID_CRITERIO, CCP.ID_DETALLE, CP.DESCRIPCION, CCP.PUNTAJE
    FROM    T_GEND_CONV_CRI_PUNTAJE CCP 
    INNER JOIN  T_GEND_CRITERIO_PUNTAJE CP ON CCP.ID_CRITERIO = CP.ID_CRITERIO AND CCP.ID_DETALLE = CP.ID_DETALLE
    WHERE   CCP.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND CCP.ID_CRITERIO = PI_ID_CRITERIO AND CCP.FLAG_ESTADO = '1'
    ORDER BY CCP.PUNTAJE ASC;
  END USP_SEL_CONV_CRI_PUNTAJE;
  
  PROCEDURE USP_PRC_GUARDAR_EVA_CRITERIO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_EMISIONES_REDUCIDAS NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  )IS
        vCONT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO vCONT 
    FROM T_GEND_CONV_CRI_PUNT_INSC
    WHERE ID_CRITERIO = PI_ID_CRITERIO
          AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
          AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
          
    IF vCONT = 0 THEN 
      INSERT INTO T_GEND_CONV_CRI_PUNT_INSC (ID_CONVOCATORIA, ID_CRITERIO, ID_DETALLE, ID_INSCRIPCION, ID_TIPO_EVALUACION, EMISIONES_REDUCIDAS, OBSERVACION, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_DETALLE, PI_ID_INSCRIPCION, PI_ID_TIPO_EVALUACION, PI_EMISIONES_REDUCIDAS, PI_OBSERVACION, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_CRI_PUNT_INSC
      SET    ID_DETALLE = PI_ID_DETALLE,
             ID_TIPO_EVALUACION = PI_ID_TIPO_EVALUACION,
             EMISIONES_REDUCIDAS = PI_EMISIONES_REDUCIDAS,
             OBSERVACION = PI_OBSERVACION,
             UPD_USUARIO = PI_USUARIO_GUARDAR,
             UPD_FECHA = SYSDATE
      WHERE  ID_CRITERIO = PI_ID_CRITERIO
             AND ID_CONVOCATORIA = PI_ID_CONVOCATORIA
             AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;      
  END USP_PRC_GUARDAR_EVA_CRITERIO;
  
  PROCEDURE USP_SEL_OBTIENE_CONV_CRI_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_GEND_CONV_CRI_PUNT_INSC
    WHERE   ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND ID_CRITERIO = PI_ID_CRITERIO AND ID_INSCRIPCION = PI_ID_INSCRIPCION AND FLAG_ESTADO = '1';
  END USP_SEL_OBTIENE_CONV_CRI_INSC;
  
  PROCEDURE USP_UPD_INSCRIPCION_EVA_CRI(
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  )AS
  BEGIN          
      UPDATE T_GENM_INSCRIPCION
      SET    ID_TIPO_EVALUACION = PI_ID_TIPO_EVALUACION,
             OBSERVACION = PI_OBSERVACION,
             UPD_USUARIO = PI_USUARIO_GUARDAR,
             UPD_FECHA = SYSDATE
      WHERE  ID_INSCRIPCION = PI_ID_INSCRIPCION;
             
      PO_ROWAFFECTED := SQL%ROWCOUNT;      
  END USP_UPD_INSCRIPCION_EVA_CRI;
  
  PROCEDURE USP_SEL_CRI_PUNTAJE(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )
  AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_GEND_CRITERIO_PUNTAJE 
    WHERE   ID_CRITERIO = PI_ID_CRITERIO AND FLAG_ESTADO = '1'
    ORDER BY PUNTAJE ASC;
  END USP_SEL_CRI_PUNTAJE;
  
  PROCEDURE USP_PRC_CONV_CRI_PUNTAJE(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_DETALLE NUMBER,
    PI_PUNTAJE NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONV_CRI_PUNTAJE C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_DETALLE = PI_ID_DETALLE)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONV_CRI_PUNTAJE
      (ID_CONVOCATORIA, ID_CRITERIO, ID_DETALLE, PUNTAJE, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_DETALLE, PI_PUNTAJE, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_CRI_PUNTAJE C SET
      C.PUNTAJE = PI_PUNTAJE,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_DETALLE = PI_ID_DETALLE;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONV_CRI_PUNTAJE;
  
  PROCEDURE USP_UPD_MOD_LOGO_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_LOGO VARCHAR2,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_INSTITUCION I SET
    I.LOGO = PI_LOGO
    WHERE I.ID_INSTITUCION = PI_ID_INSTITUCION;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_MOD_LOGO_INSTITUCION;
  
  PROCEDURE USP_UPD_MOD_DATOS_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PI_NOMBRE_COMERCIAL VARCHAR2,
    PI_DESCRIPCION VARCHAR2,
    PI_ID_SUBSECTOR_TIPOEMPRESA NUMBER,
    PI_ID_TRABAJADORES_CAMA NUMBER,
    PI_CANTIDAD NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_INSTITUCION I SET
    I.NOMBRE_COMERCIAL = PI_NOMBRE_COMERCIAL,
    I.DESCRIPCION = PI_DESCRIPCION,
    I.ID_SUBSECTOR_TIPOEMPRESA = PI_ID_SUBSECTOR_TIPOEMPRESA,
    I.ID_TRABAJADORES_CAMA = PI_ID_TRABAJADORES_CAMA,
    I.CANTIDAD = PI_CANTIDAD
    WHERE I.ID_INSTITUCION = PI_ID_INSTITUCION;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_MOD_DATOS_INSTITUCION;

  PROCEDURE USP_PRC_CONV_ETA_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONV_ETA_INSC C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_ETAPA = PI_ID_ETAPA AND C.ID_INSCRIPCION = PI_ID_INSCRIPCION)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      IF PI_ID_TIPO_EVALUACION = 0 THEN
        INSERT INTO T_GEND_CONV_ETA_INSC (ID_CONVOCATORIA, ID_ETAPA, ID_INSCRIPCION, REALIZADO, REG_USUARIO, REG_FECHA)
        VALUES (PI_ID_CONVOCATORIA, PI_ID_ETAPA, PI_ID_INSCRIPCION, '1', PI_USUARIO_GUARDAR, SYSDATE);
      ELSE
        INSERT INTO T_GEND_CONV_ETA_INSC (ID_CONVOCATORIA, ID_ETAPA, ID_INSCRIPCION, ID_TIPO_EVALUACION, OBSERVACION, REALIZADO, REG_USUARIO, REG_FECHA)
        VALUES (PI_ID_CONVOCATORIA, PI_ID_ETAPA, PI_ID_INSCRIPCION, PI_ID_TIPO_EVALUACION, PI_OBSERVACION, '1', PI_USUARIO_GUARDAR, SYSDATE);
      END IF;      
    ELSE
      UPDATE T_GEND_CONV_ETA_INSC C SET
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_ETAPA = PI_ID_ETAPA AND C.ID_INSCRIPCION = PI_ID_INSCRIPCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONV_ETA_INSC;
  
  PROCEDURE USP_SEL_OBTIENE_CONV_ETA_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    *
    FROM T_GEND_CONV_ETA_INSC C
    WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_ETAPA = PI_ID_ETAPA AND C.ID_INSCRIPCION = PI_ID_INSCRIPCION;
  END USP_SEL_OBTIENE_CONV_ETA_INSC;

  PROCEDURE USP_UPD_EVA_CRI_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
      UPDATE T_GEND_CONV_CRI_CASO_DOC_INSC C SET
      C.ID_TIPO_EVALUACION = PI_ID_TIPO_EVALUACION,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_CASO = PI_ID_CASO AND C.ID_DOCUMENTO = PI_ID_DOCUMENTO AND C.ID_INSCRIPCION = PI_ID_INSCRIPCION;
      PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_EVA_CRI_INSC;

  PROCEDURE USP_SEL_PUNTAJE_INSC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  SUM(CCP.PUNTAJE) PUNTAJE, SUM(CCPI.EMISIONES_REDUCIDAS) EMISIONES_REDUCIDAS
    FROM    T_GEND_CONV_CRI_PUNT_INSC CCPI
    INNER JOIN T_GEND_CONV_CRI_PUNTAJE CCP ON CCPI.ID_CONVOCATORIA = CCP.ID_CONVOCATORIA AND CCPI.ID_CRITERIO = CCP.ID_CRITERIO AND CCPI.ID_DETALLE = CCP.ID_DETALLE
    WHERE   CCPI.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND CCPI.ID_INSCRIPCION = PI_ID_INSCRIPCION AND ID_TIPO_EVALUACION = 1;
  END USP_SEL_PUNTAJE_INSC;
  
  PROCEDURE USP_PRC_RECONOCIMIENTO(
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_INSIGNIA NUMBER,
    PI_PUNTAJE NUMBER,
    PI_ID_ESTRELLA NUMBER,
    PI_EMISIONES NUMBER,
    PI_FLAG_MEJORACONTINUA VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GENM_RECONOCIMIENTO C WHERE C.ID_INSCRIPCION = PI_ID_INSCRIPCION)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      vID := SQ_GENM_RECONOCIMIENTO.NEXTVAL();
      INSERT INTO T_GENM_RECONOCIMIENTO (ID_RECONOCIMIENTO, ID_INSCRIPCION, ID_INSIGNIA, PUNTAJE, ID_ESTRELLA, EMISIONES, FLAG_MEJORACONTINUA, REG_USUARIO, REG_FECHA)
      VALUES (vID, PI_ID_INSCRIPCION, PI_ID_INSIGNIA, PI_PUNTAJE, PI_ID_ESTRELLA, PI_EMISIONES, PI_FLAG_MEJORACONTINUA, PI_USUARIO_GUARDAR, SYSDATE);    
    ELSE
      UPDATE T_GENM_RECONOCIMIENTO C SET
      C.ID_INSIGNIA = PI_ID_INSIGNIA,
      C.PUNTAJE = PI_PUNTAJE,
      C.ID_ESTRELLA = PI_ID_ESTRELLA,
      C.EMISIONES = PI_EMISIONES,
      C.FLAG_MEJORACONTINUA = PI_FLAG_MEJORACONTINUA,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_INSCRIPCION = PI_ID_INSCRIPCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_RECONOCIMIENTO;

  PROCEDURE USP_SEL_INSTITUCION_INSC(
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_GENM_INSTITUCION INST
    INNER JOIN T_GENM_INSCRIPCION INSC ON INST.ID_INSTITUCION = INSC.ID_INSTITUCION
    WHERE   INSC.ID_INSCRIPCION = PI_ID_INSCRIPCION;
  END USP_SEL_INSTITUCION_INSC;
  
  PROCEDURE USP_SEL_LISTA_ESTR_TRAB_CAMA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_TRABAJADORES_CAMA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_GEND_CONV_ESTREL_TRAB
    WHERE   ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND ID_TRABAJADORES_CAMA = PI_ID_TRABAJADORES_CAMA
    ORDER BY EMISIONES_MIN DESC;
  END USP_SEL_LISTA_ESTR_TRAB_CAMA;
END PKG_SISSELLO_CRITERIO;

/

prompt
prompt Creating package body PKG_SISSELLO_MANTENIMIENTO
prompt ============================================
prompt
CREATE OR REPLACE PACKAGE BODY SISSELLO."PKG_SISSELLO_MANTENIMIENTO" AS

  PROCEDURE USP_PRC_MAN_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_ARCHIVO_BASE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
      (SELECT C.ID_CRITERIO FROM T_GENM_CRITERIO C WHERE C.ID_CRITERIO = PI_ID_CRITERIO)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      vID := SQ_GENM_CRITERIO.NEXTVAL();
      INSERT INTO T_GENM_CRITERIO
      (ID_CRITERIO, NOMBRE, ARCHIVO_BASE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_ARCHIVO_BASE, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GENM_CRITERIO C SET
      C.NOMBRE = PI_NOMBRE,
      C.ARCHIVO_BASE = PI_ARCHIVO_BASE,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CRITERIO = PI_ID_CRITERIO;
    END IF;
  END USP_PRC_MAN_CRITERIO;
  
  PROCEDURE USP_DEL_CRITERIO(
    PI_ID_CRITERIO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_CRITERIO 
    SET FLAG_ESTADO = '0' 
    WHERE ID_CRITERIO = PI_ID_CRITERIO;
  END USP_DEL_CRITERIO;

  PROCEDURE USP_SEL_GET_CRITERIO(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            NOMBRE,
	    ARCHIVO_BASE
    FROM  T_GENM_CRITERIO
    WHERE ID_CRITERIO = PI_ID_CRITERIO; 
  END USP_SEL_GET_CRITERIO;

  PROCEDURE USP_SEL_LISTA_BUSQ_CRITERIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_CRITERIO C
                    WHERE LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  C.ID_CRITERIO,
                                C.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_CRITERIO C
                        WHERE LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_CRITERIO;
  
  PROCEDURE USP_SEL_ALL_CRITERIO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            NOMBRE
    FROM  T_GENM_CRITERIO
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_CRITERIO;

  PROCEDURE USP_MAN_GUARDA_CONVOCATORIA_CRITERIO_REQUERIMIENTO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_OBLIGATORIO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID_CONVOCATORIA NUMBER;
    vID_CRITERIO NUMBER;
    vID_REQUERIMIENTO NUMBER;
  BEGIN
    SELECT
    MAX(CCR.ID_CONVOCATORIA), MAX(CCR.ID_CRITERIO), MAX(CCR.ID_REQUERIMIENTO)
    INTO vID_CONVOCATORIA, vID_CRITERIO, vID_REQUERIMIENTO
    FROM T_GEND_CONVOCATORIA_CRI_REQUER CCR
    WHERE
    CCR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
    CCR.ID_CRITERIO = PI_ID_CRITERIO AND
    CCR.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    
    IF vID_CONVOCATORIA IS NULL AND vID_CRITERIO IS NULL AND vID_REQUERIMIENTO IS NULL THEN
       INSERT INTO T_GEND_CONVOCATORIA_CRI_REQUER
       (ID_CONVOCATORIA, ID_CRITERIO, ID_REQUERIMIENTO, OBLIGATORIO, REG_USUARIO)
       VALUES
       (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_REQUERIMIENTO, PI_OBLIGATORIO, PI_UPD_USUARIO);
    ELSE
      UPDATE T_GEND_CONVOCATORIA_CRI_REQUER CCR SET
      CCR.OBLIGATORIO = PI_OBLIGATORIO,
      CCR.UPD_USUARIO = PI_UPD_USUARIO,
      CCR.UPD_FECHA = SYSDATE
      WHERE
      CCR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
      CCR.ID_CRITERIO = PI_ID_CRITERIO AND
      CCR.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    END IF;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_CONVOCATORIA_CRITERIO_REQUERIMIENTO;
  
  
  PROCEDURE USP_SEL_LISTA_BUSQ_USUARIO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_USUARIO U
                    WHERE (
                    LOWER(TRANSLATE(U.NOMBRES,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.APELLIDOS,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CORREO,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(U.CELULAR,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%''
                    )';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                        SELECT  U.ID_USUARIO,
                                U.NOMBRES,
                                U.APELLIDOS,
                                U.CORREO,
                                U.TELEFONO,
                                U.ANEXO,
                                U.CELULAR,
                                U.FLAG_ESTADO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_USUARIO U
                        WHERE (
                        LOWER(TRANSLATE(U.NOMBRES,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.APELLIDOS,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CORREO,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(U.CELULAR,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%''
                        )
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_USUARIO;
  
  PROCEDURE USP_SEL_LISTA_USUARIO_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR 
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    U.ID_USUARIO,
    U.NOMBRES,
    U.APELLIDOS,
    U.CORREO,
    U.TELEFONO,
    U.ANEXO,
    U.CELULAR,
    U.ID_INSTITUCION,
    U.ID_ROL,
    U.FLAG_ESTADO
    FROM T_GENM_USUARIO U
    WHERE U.FLAG_ESTADO = '1'
    AND U.ID_ROL = PI_ID_ROL;
  END USP_SEL_LISTA_USUARIO_ROL;

  PROCEDURE USP_UPD_CAMBIA_ESTADO_USUARIO(
    PI_ID_USUARIO IN NUMBER,
    PI_FLAG_ESTADO IN VARCHAR2,
    PI_UPD_USUARIO IN NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_USUARIO U SET
    U.FLAG_ESTADO = PI_FLAG_ESTADO,
    U.UPD_USUARIO = PI_UPD_USUARIO,
    U.UPD_FECHA = SYSDATE
    WHERE U.ID_USUARIO = PI_ID_USUARIO;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_CAMBIA_ESTADO_USUARIO;

  PROCEDURE USP_MAN_GUARDA_USUARIO(
    PI_ID_USUARIO IN OUT NUMBER,
    PI_NOMBRES VARCHAR2,
    PI_APELLIDOS VARCHAR2,
    PI_CORREO VARCHAR2,
    PI_CONTRASENA VARCHAR2,
    PI_TELEFONO VARCHAR2,
    PI_ANEXO VARCHAR2,
    PI_CELULAR VARCHAR2,
    PI_ID_INSTITUCION NUMBER,
    PI_ID_ROL NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT U.ID_USUARIO FROM T_GENM_USUARIO U WHERE U.ID_USUARIO = PI_ID_USUARIO)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      PI_ID_USUARIO := SQ_GENM_USUARIO.NEXTVAL();
      INSERT INTO T_GENM_USUARIO
      (ID_USUARIO, NOMBRES, APELLIDOS, CORREO, CONTRASENA, TELEFONO, ANEXO, CELULAR, ID_INSTITUCION, ID_ROL, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_USUARIO, PI_NOMBRES, PI_APELLIDOS, PI_CORREO, PI_CONTRASENA, PI_TELEFONO, PI_ANEXO, PI_CELULAR, PI_ID_INSTITUCION, PI_ID_ROL, PI_FLAG_ESTADO, PI_UPD_USUARIO, SYSDATE);
    ELSE
      UPDATE T_GENM_USUARIO U SET
      U.NOMBRES = PI_NOMBRES,
      U.APELLIDOS = PI_APELLIDOS,
      U.CORREO = PI_CORREO,
      U.TELEFONO = PI_TELEFONO,
      U.ANEXO = PI_ANEXO,
      U.CELULAR = PI_CELULAR,
      U.ID_INSTITUCION = PI_ID_INSTITUCION,
      U.ID_ROL = PI_ID_ROL
      WHERE U.ID_USUARIO = PI_ID_USUARIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_USUARIO;
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO(
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    U.ID_USUARIO,
    U.NOMBRES,
    U.APELLIDOS,
    U.CORREO,
    U.TELEFONO,
    U.ANEXO,
    U.CELULAR,
    U.ID_INSTITUCION,
    U.ID_ROL
    FROM T_GENM_USUARIO U
    WHERE U.ID_USUARIO = PI_ID_USUARIO;
  END USP_SEL_OBTIENE_USUARIO;
  
  PROCEDURE USP_SEL_OBTIENE_USUARIO_INSTITUCION_CORREO(
    PI_ID_INSTITUCION NUMBER,
    PI_CORREO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    U.ID_USUARIO,
    U.NOMBRES,
    U.APELLIDOS,
    U.CORREO,
    U.TELEFONO,
    U.ANEXO,
    U.CELULAR,
    U.ID_INSTITUCION,
    U.ID_ROL
    FROM T_GENM_USUARIO U
    WHERE U.ID_INSTITUCION = PI_ID_INSTITUCION
    AND U.CORREO = PI_CORREO;
  END USP_SEL_OBTIENE_USUARIO_INSTITUCION_CORREO;

  PROCEDURE USP_SEL_LISTA_ROL_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT R.ID_ROL, R.NOMBRE, R.FLAG_ESTADO
    FROM T_MAE_ROL R
    WHERE R.FLAG_ESTADO = PI_FLAG_ESTADO;
  END USP_SEL_LISTA_ROL_ESTADO;
  
  PROCEDURE USP_SEL_OBTIENE_ROL(
    PI_ID_ROL NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    R.ID_ROL,
    R.NOMBRE,
    R.FLAG_ESTADO
    FROM T_MAE_ROL R
    WHERE ID_ROL = PI_ID_ROL;
  END USP_SEL_OBTIENE_ROL;
  
  PROCEDURE USP_SEL_ALL_EVALUADOR(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_USUARIO,
            (NOMBRES || ' ' || APELLIDOS) NOMBRE_COMPLETO
    FROM  T_GENM_USUARIO
    WHERE ID_ROL = 2 AND FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_EVALUADOR;
  
  PROCEDURE USP_SEL_LISTA_SECTOR_ESTADO(
    PI_FLAG_ESTADO VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT S.ID_SECTOR, S.NOMBRE, S.FLAG_ESTADO
    FROM T_MAE_SECTOR S
    WHERE S.FLAG_ESTADO = PI_FLAG_ESTADO;
  END USP_SEL_LISTA_SECTOR_ESTADO;
  
  PROCEDURE USP_SEL_OBTIENE_SECTOR(
    PI_ID_SECTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    S.ID_SECTOR, S.NOMBRE, S.FLAG_ESTADO
    FROM T_MAE_SECTOR S
    WHERE S.ID_SECTOR = PI_ID_SECTOR;
  END USP_SEL_OBTIENE_SECTOR;

  PROCEDURE USP_PRC_MAN_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
      (SELECT R.ID_REQUERIMIENTO FROM T_GENM_REQUERIMIENTO R WHERE R.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      vID := SQ_GENM_REQUERIMIENTO.NEXTVAL();
      INSERT INTO T_GENM_REQUERIMIENTO
      (ID_REQUERIMIENTO, NOMBRE, REG_USUARIO, REG_FECHA)
      VALUES
      (vID, PI_NOMBRE, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GENM_REQUERIMIENTO R SET
      R.NOMBRE = PI_NOMBRE,
      R.UPD_USUARIO = PI_USUARIO_GUARDAR,
      R.UPD_FECHA = SYSDATE
      WHERE R.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    END IF;
  END USP_PRC_MAN_REQUERIMIENTO;
  
  PROCEDURE USP_DEL_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_REQUERIMIENTO
    SET FLAG_ESTADO = '0' 
    WHERE ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
  END USP_DEL_REQUERIMIENTO;

  PROCEDURE USP_SEL_GET_REQUERIMIENTO(
    PI_ID_REQUERIMIENTO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_REQUERIMIENTO,
            NOMBRE
    FROM  T_GENM_REQUERIMIENTO
    WHERE ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO; 
  END USP_SEL_GET_REQUERIMIENTO;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_REQUERIMIENTO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_REQUERIMIENTO R
                    WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    R.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  R.ID_REQUERIMIENTO,
                                R.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_REQUERIMIENTO R
                        WHERE LOWER(TRANSLATE(R.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_REQUERIMIENTO;
  
  PROCEDURE USP_SEL_ALL_REQUERIMIENTO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_REQUERIMIENTO,
            NOMBRE
    FROM  T_GENM_REQUERIMIENTO
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_REQUERIMIENTO;
  
  PROCEDURE USP_UPD_PROCESO(
    PI_ID_PROCESO NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
  BEGIN
    UPDATE T_MAE_PROCESO 
    SET NOMBRE = PI_NOMBRE,
        UPD_USUARIO = PI_USUARIO_GUARDAR,
        UPD_FECHA = SYSDATE
    WHERE ID_PROCESO = PI_ID_PROCESO;
  END USP_UPD_PROCESO;
  
  PROCEDURE USP_SEL_GET_PROCESO(
    PI_ID_PROCESO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_PROCESO,
            NOMBRE
    FROM  T_MAE_PROCESO
    WHERE ID_PROCESO = PI_ID_PROCESO; 
  END USP_SEL_GET_PROCESO;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_PROCESO(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_PROCESO P
                    WHERE LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    P.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  P.ID_PROCESO,
                                P.NOMBRE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_PROCESO P
                        WHERE LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        P.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_PROCESO;
  
  PROCEDURE USP_UPD_ETAPA(
    PI_ID_ETAPA NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER
  ) AS
  BEGIN
    UPDATE T_MAE_ETAPA 
    SET NOMBRE = PI_NOMBRE,
        UPD_USUARIO = PI_USUARIO_GUARDAR,
        UPD_FECHA = SYSDATE
    WHERE ID_ETAPA = PI_ID_ETAPA;
  END USP_UPD_ETAPA;
  
  PROCEDURE USP_SEL_GET_ETAPA(
    PI_ID_ETAPA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  E.ID_ETAPA,
            E.NOMBRE ETAPA,
            P.NOMBRE PROCESO
    FROM  T_MAE_ETAPA E
    LEFT JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
    WHERE E.ID_ETAPA = PI_ID_ETAPA; 
  END USP_SEL_GET_ETAPA;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_ETAPA(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_MAE_ETAPA E
                    LEFT JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
                    WHERE 
                    (LOWER(TRANSLATE(E.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                    LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'') AND
                    E.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    
    IF PI_COLUMNA = 'ID_ETAPA' THEN
      vCOLUMNA := 'E.ID_ETAPA';
    ELSIF PI_COLUMNA = 'ETAPA' THEN
      vCOLUMNA := 'E.NOMBRE';
    ELSIF PI_COLUMNA = 'PROCESO' THEN
      vCOLUMNA := 'P.NOMBRE';
    ELSE
      vCOLUMNA := PI_COLUMNA;
    END IF;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  E.ID_ETAPA,
                                E.NOMBRE ETAPA,
                                P.NOMBRE PROCESO,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_MAE_ETAPA E
                        LEFT JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
                        WHERE
                        (LOWER(TRANSLATE(E.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' OR
                        LOWER(TRANSLATE(P.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'') AND
                        E.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_ETAPA;

  PROCEDURE USP_SEL_LISTA_INSTITUCION(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    I.ID_INSTITUCION,
    I.RUC,
    I.RAZON_SOCIAL,
    I.DOMICILIO_LEGAL,
    I.ID_SECTOR,
    I.FLAG_ESTADO
    FROM T_GENM_INSTITUCION I
    WHERE I.FLAG_ESTADO = '1';
  END USP_SEL_LISTA_INSTITUCION;  
 
  PROCEDURE USP_SEL_OBTIENE_INSTITUCION_RUC(
    PI_RUC VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    I.ID_INSTITUCION,
    I.RUC,
    I.RAZON_SOCIAL,
    I.NOMBRE_COMERCIAL,
    I.DESCRIPCION,
    I.DOMICILIO_LEGAL,
    I.ID_SECTOR,
    I.LOGO,
    I.ID_SUBSECTOR_TIPOEMPRESA, --ADD
    I.ID_TRABAJADORES_CAMA, --ADD
    I.CANTIDAD, --ADD
    I.FLAG_ESTADO
    FROM T_GENM_INSTITUCION I
    WHERE I.RUC = PI_RUC;
  END USP_SEL_OBTIENE_INSTITUCION_RUC;

  PROCEDURE USP_SEL_OBTIENE_INSTITUCION(
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    I.ID_INSTITUCION,
    I.RUC,
    I.RAZON_SOCIAL,
    I.NOMBRE_COMERCIAL,
    I.DESCRIPCION,
    I.DOMICILIO_LEGAL,
    I.ID_SECTOR,
    I.ID_SUBSECTOR_TIPOEMPRESA, --ADD
    I.ID_TRABAJADORES_CAMA, --ADD
    I.CANTIDAD, --ADD
    I.LOGO,
    I.FLAG_ESTADO
    FROM T_GENM_INSTITUCION I
    WHERE I.ID_INSTITUCION = PI_ID_INSTITUCION;
  END USP_SEL_OBTIENE_INSTITUCION;
  
  PROCEDURE USP_SEL_ALL_ANNO(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_ANNO,
            NOMBRE
    FROM  T_MAE_ANNO 
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_ANNO;

  PROCEDURE USP_PRC_MAN_CONVOCATORIA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_GET IN OUT NUMBER,
    PI_NOMBRE VARCHAR2,
    PI_DESCRIPCION VARCHAR2,
    PI_FECHA_INICIO DATE,
    PI_FECHA_FIN DATE,
    PI_LIMITE_POSTULANTE NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT C.ID_CONVOCATORIA FROM T_GENM_CONVOCATORIA C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      PI_ID_GET := SQ_GENM_CONVOCATORIA.NEXTVAL();
      INSERT INTO T_GENM_CONVOCATORIA
      (ID_CONVOCATORIA, NOMBRE, DESCRIPCION, FECHA_INICIO, FECHA_FIN, LIMITE_POSTULANTE, ID_ETAPA, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_GET, PI_NOMBRE, PI_DESCRIPCION, PI_FECHA_INICIO, PI_FECHA_FIN, PI_LIMITE_POSTULANTE, PI_ID_ETAPA, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GENM_CONVOCATORIA C SET
      C.NOMBRE = PI_NOMBRE,
      C.DESCRIPCION = PI_DESCRIPCION,
      C.FECHA_INICIO = PI_FECHA_INICIO,
      C.FECHA_FIN = PI_FECHA_FIN,
      C.LIMITE_POSTULANTE = PI_LIMITE_POSTULANTE,
      C.ID_ETAPA = PI_ID_ETAPA, 
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA;
      PI_ID_GET := PI_ID_CONVOCATORIA;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_MAN_CONVOCATORIA;
  
  PROCEDURE USP_SEL_LISTA_BUSQ_CONVOCAT(
    PI_BUSCAR VARCHAR2,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS    
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM T_GENM_CONVOCATORIA C
                    WHERE LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                    C.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;
    
    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;
    vCOLUMNA := PI_COLUMNA;
    
    vQUERY_SELECT := 'SELECT * FROM 
                        (
                        SELECT  C.ID_CONVOCATORIA,
                                C.NOMBRE,
                                C.DESCRIPCION,
                                TO_CHAR(C.FECHA_INICIO, ''dd/MM/yyyy'') TXT_FECHA_INICIO,
                                TO_CHAR(C.FECHA_FIN, ''dd/MM/yyyy'') TXT_FECHA_FIN,
                                C.LIMITE_POSTULANTE,
                                ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                || vPAGINA_ACTUAL || ' AS PAGINA,'
                                || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                || vTOTAL_REG || ' AS TOTAL_REGISTROS
                        FROM T_GENM_CONVOCATORIA C
                        WHERE LOWER(TRANSLATE(C.NOMBRE,''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%''|| LOWER(TRANSLATE('''|| PI_BUSCAR ||''',''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) ||''%'' AND
                        C.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));
    
    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_LISTA_BUSQ_CONVOCAT;
  
  PROCEDURE USP_SEL_GET_CONVOCATORIA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CONVOCATORIA,
            NOMBRE,
            DESCRIPCION,
            TO_CHAR(FECHA_INICIO, 'yyyy-MM-dd') TXT_FECHA_INICIO,
            TO_CHAR(FECHA_FIN, 'yyyy-MM-dd') TXT_FECHA_FIN,
            LIMITE_POSTULANTE,
            ID_ETAPA 
    FROM  T_GENM_CONVOCATORIA
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA; 
  END USP_SEL_GET_CONVOCATORIA;
  
  PROCEDURE USP_PRC_CONVOCATORIA_REQ(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONVOCATORIA_REQUERIM C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONVOCATORIA_REQUERIM
      (ID_CONVOCATORIA, ID_REQUERIMIENTO, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_REQUERIMIENTO, PI_FLAG_ESTADO, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONVOCATORIA_REQUERIM C SET
      C.FLAG_ESTADO = PI_FLAG_ESTADO,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONVOCATORIA_REQ;
  
  PROCEDURE USP_PRC_CONVOCATORIA_CRI(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONVOCATORIA_CRITERIO C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONVOCATORIA_CRITERIO
      (ID_CONVOCATORIA, ID_CRITERIO, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_FLAG_ESTADO, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONVOCATORIA_CRITERIO C SET
      C.FLAG_ESTADO = PI_FLAG_ESTADO,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONVOCATORIA_CRI;
  
  PROCEDURE USP_PRC_CONVOCATORIA_EVA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONVOCATORIA_EVALUADOR C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_USUARIO = PI_ID_USUARIO)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONVOCATORIA_EVALUADOR
      (ID_CONVOCATORIA, ID_USUARIO, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_USUARIO, PI_FLAG_ESTADO, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONVOCATORIA_EVALUADOR C SET
      C.FLAG_ESTADO = PI_FLAG_ESTADO,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_USUARIO = PI_ID_USUARIO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONVOCATORIA_EVA;
  
  PROCEDURE USP_PRC_CONVOCATORIA_ETA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ETAPA NUMBER,
    PI_DIAS VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONVOCATORIA_ETAPA C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_ETAPA = PI_ID_ETAPA)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONVOCATORIA_ETAPA
      (ID_CONVOCATORIA, ID_ETAPA, DIAS, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_ETAPA, PI_DIAS, '1', PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONVOCATORIA_ETAPA E SET
      E.DIAS = PI_DIAS,
      E.UPD_USUARIO = PI_USUARIO_GUARDAR,
      E.UPD_FECHA = SYSDATE
      WHERE E.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND E.ID_ETAPA = PI_ID_ETAPA;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONVOCATORIA_ETA;
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_REQ(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_REQUERIMIENTO,
            FLAG_ESTADO
    FROM  T_GEND_CONVOCATORIA_REQUERIM
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND FLAG_ESTADO = '1'; 
  END USP_SEL_LISTA_CONVOCAT_REQ;
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_CRI(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            ID_CONVOCATORIA, 
            FLAG_ESTADO
    FROM  T_GEND_CONVOCATORIA_CRITERIO
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND FLAG_ESTADO = '1'; 
  END USP_SEL_LISTA_CONVOCAT_CRI;
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_EVA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  CE.ID_USUARIO,
            CE.FLAG_ESTADO,
            U.NOMBRES || ' '|| U.APELLIDOS NOMBRES --ADD
    FROM  T_GEND_CONVOCATORIA_EVALUADOR CE
    INNER JOIN T_GENM_USUARIO U ON CE.ID_USUARIO = U.ID_USUARIO
    WHERE CE.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND CE.FLAG_ESTADO = '1'; 
  END USP_SEL_LISTA_CONVOCAT_EVA;
  
  PROCEDURE USP_SEL_LISTA_CONVOCAT_ETA(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_ETAPA,
            DIAS,
            FLAG_ESTADO
    FROM  T_GEND_CONVOCATORIA_ETAPA
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND FLAG_ESTADO = '1'; 
  END USP_SEL_LISTA_CONVOCAT_ETA;
  
  PROCEDURE USP_SEL_ALL_ETAPA(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  E.ID_ETAPA,
            E.NOMBRE ETAPA,
            P.NOMBRE PROCESO
    FROM  T_MAE_ETAPA E 
    INNER JOIN T_MAE_PROCESO P ON E.ID_PROCESO = P.ID_PROCESO
    WHERE E.FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_ETAPA;
  
  PROCEDURE USP_MAN_GUARDA_INSTITUCION(
    PI_ID_INSTITUCION IN OUT NUMBER,
    PI_RUC VARCHAR2,
    PI_RAZON_SOCIAL VARCHAR2,
    PI_DOMICILIO_LEGAL VARCHAR2,
    PI_ID_SECTOR NUMBER,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT I.ID_INSTITUCION FROM T_GENM_INSTITUCION I WHERE I.ID_INSTITUCION = PI_ID_INSTITUCION)
    INTO vID
    FROM DUAL;
    
    IF vID IS NULL THEN
      PI_ID_INSTITUCION := SQ_GENM_INSTITUCION.NEXTVAL();
      INSERT INTO T_GENM_INSTITUCION
      (ID_INSTITUCION, RUC, RAZON_SOCIAL, DOMICILIO_LEGAL, ID_SECTOR, REG_USUARIO)
      VALUES
      (PI_ID_INSTITUCION, PI_RUC, PI_RAZON_SOCIAL, PI_DOMICILIO_LEGAL, PI_ID_SECTOR, PI_UPD_USUARIO);
    ELSE
      UPDATE T_GENM_INSTITUCION I SET
        I.RAZON_SOCIAL = PI_RAZON_SOCIAL,
        I.DOMICILIO_LEGAL = PI_DOMICILIO_LEGAL,
        I.ID_SECTOR = PI_ID_SECTOR,
        I.UPD_USUARIO = PI_UPD_USUARIO,
        I.UPD_FECHA = SYSDATE
      WHERE I.ID_INSTITUCION = vID;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_MAN_GUARDA_INSTITUCION;
  
  PROCEDURE USP_SEL_CRI_CAS_COMPONENTE(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_GENM_COMPONENTE
    WHERE   ID_CRITERIO = PI_ID_CRITERIO AND ID_CASO = PI_ID_CASO AND FLAG_ESTADO = '1'
    ORDER BY ID_COMPONENTE ASC; --ADD            
  END USP_SEL_CRI_CAS_COMPONENTE;
  
  PROCEDURE USP_SEL_INDICADOR(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAEM_INDICADOR
    WHERE   ID_CRITERIO = PI_ID_CRITERIO AND ID_CASO = PI_ID_CASO AND ID_COMPONENTE = PI_ID_COMPONENTE AND FLAG_ESTADO = '1'
    ORDER BY ORDEN ASC; --ADD            
  END USP_SEL_INDICADOR;
  
  PROCEDURE USP_SEL_GET_PARAMETRO(
    PI_ID_PARAMETRO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM    T_MAEM_PARAMETRO
    WHERE   ID_PARAMETRO = PI_ID_PARAMETRO;         
  END USP_SEL_GET_PARAMETRO;
  
  PROCEDURE USP_SEL_INDICADOR_ID(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  DISTINCT ID_CRITERIO, ID_CASO, ID_COMPONENTE, ID_INDICADOR
    FROM    T_MAEM_INDICADOR_FORM
    WHERE   ID_CRITERIO = PI_ID_CRITERIO AND ID_CASO = PI_ID_CASO AND ID_COMPONENTE = PI_ID_COMPONENTE AND FLAG_ESTADO = '1'
    ORDER BY ID_INDICADOR ASC;
  END USP_SEL_INDICADOR_ID;
  
  PROCEDURE USP_SEL_INDICADOR_FORM(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INDICADOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  IND.ID_CRITERIO, IND.ID_CASO, IND.ID_COMPONENTE, IND.ID_PARAMETRO, IND.ID_INDICADOR, IND.VALOR,
            P.ID_TIPO_CONTROL, P.ID_TIPO_DATO, P.DECIMAL_V, P.VERIFICABLE, P.EDITABLE, P.OBTENIBLE, P.ESTATICO, P.NOMBRE, P.FILTRO, P.RESULTADO, P.TAMANO, P.EMISIONES, P.AHORRO----17-07-20
    FROM    T_MAEM_INDICADOR_FORM IND
    INNER JOIN T_MAEM_INDICADOR INDIC ON IND.ID_CRITERIO = INDIC.ID_CRITERIO AND IND.ID_CASO = INDIC.ID_CASO AND IND.ID_COMPONENTE = INDIC.ID_COMPONENTE AND IND.ID_PARAMETRO = INDIC.ID_PARAMETRO
    INNER JOIN T_MAEM_PARAMETRO P ON IND.ID_PARAMETRO = P.ID_PARAMETRO
    WHERE   IND.ID_CRITERIO = PI_ID_CRITERIO AND IND.ID_CASO = PI_ID_CASO AND IND.ID_COMPONENTE = PI_ID_COMPONENTE AND IND.ID_INDICADOR = PI_ID_INDICADOR AND IND.FLAG_ESTADO = '1'
    ORDER BY INDIC.ORDEN ASC;            
  END USP_SEL_INDICADOR_FORM;
  
  PROCEDURE USP_SEL_INDICADOR_DATA(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INDICADOR NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  IND.ID_CRITERIO, IND.ID_CASO, IND.ID_COMPONENTE, IND.ID_PARAMETRO, IND.ID_INDICADOR, IND.VALOR,
            P.ID_TIPO_CONTROL, P.ID_TIPO_DATO, P.DECIMAL_V, P.VERIFICABLE, P.EDITABLE, P.OBTENIBLE, P.ESTATICO, P.NOMBRE, P.FILTRO, P.RESULTADO, P.TAMANO, P.EMISIONES, P.AHORRO----17-07-20
    FROM    T_MAEM_INDICADOR_DATA IND
    INNER JOIN T_MAEM_INDICADOR INDIC ON IND.ID_CRITERIO = INDIC.ID_CRITERIO AND IND.ID_CASO = INDIC.ID_CASO AND IND.ID_COMPONENTE = INDIC.ID_COMPONENTE AND IND.ID_PARAMETRO = INDIC.ID_PARAMETRO
    INNER JOIN T_MAEM_PARAMETRO P ON IND.ID_PARAMETRO = P.ID_PARAMETRO
    WHERE   IND.ID_CRITERIO = PI_ID_CRITERIO 
            AND IND.ID_CASO = PI_ID_CASO 
            AND IND.ID_COMPONENTE = PI_ID_COMPONENTE 
            AND IND.ID_INDICADOR = PI_ID_INDICADOR
            AND IND.ID_INSCRIPCION = PI_ID_INSCRIPCION
            AND IND.FLAG_ESTADO = '1'
    ORDER BY INDIC.ORDEN ASC;            
  END USP_SEL_INDICADOR_DATA;
  
  PROCEDURE USP_PRC_MAN_INDICADOR_DATA(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,
    PI_ID_INDICADOR NUMBER,
    PI_ID_PARAMETRO NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_VALOR VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  )IS
        vCONT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO vCONT 
    FROM T_MAEM_INDICADOR_DATA
    WHERE ID_CRITERIO = PI_ID_CRITERIO 
          AND ID_CASO = PI_ID_CASO
          AND ID_COMPONENTE = PI_ID_COMPONENTE
          AND ID_INDICADOR = PI_ID_INDICADOR
          AND ID_PARAMETRO = PI_ID_PARAMETRO
          AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
          
    IF vCONT = 0 THEN 
      INSERT INTO T_MAEM_INDICADOR_DATA (ID_CRITERIO, ID_CASO, ID_COMPONENTE, ID_INDICADOR, ID_PARAMETRO, ID_INSCRIPCION, VALOR, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_CRITERIO, PI_ID_CASO, PI_ID_COMPONENTE, PI_ID_INDICADOR, PI_ID_PARAMETRO, PI_ID_INSCRIPCION, PI_VALOR, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_MAEM_INDICADOR_DATA
      SET    VALOR = PI_VALOR,
             UPD_USUARIO = PI_USUARIO_GUARDAR,
             UPD_FECHA = SYSDATE
      WHERE  ID_CRITERIO = PI_ID_CRITERIO 
             AND ID_CASO = PI_ID_CASO
             AND ID_COMPONENTE = PI_ID_COMPONENTE
             AND ID_INDICADOR = PI_ID_INDICADOR
             AND ID_PARAMETRO = PI_ID_PARAMETRO
             AND ID_INSCRIPCION = PI_ID_INSCRIPCION; 
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;      
  END USP_PRC_MAN_INDICADOR_DATA;
  
  PROCEDURE USP_SEL_NEXT_ID_INDICADOR(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,    
    PI_ID_INSCRIPCION NUMBER,
    PO_ID_INDICADOR OUT NUMBER
  )AS
  BEGIN
      SELECT  (NVL(MAX(ID_INDICADOR),0) + 1) INTO PO_ID_INDICADOR
      FROM    T_MAEM_INDICADOR_DATA
      WHERE ID_CRITERIO = PI_ID_CRITERIO
          AND ID_CASO = PI_ID_CASO
          AND ID_COMPONENTE = PI_ID_COMPONENTE
          AND ID_INSCRIPCION = PI_ID_INSCRIPCION;
  END USP_SEL_NEXT_ID_INDICADOR;
  
  PROCEDURE USP_SEL_VERIFICAR_INDICADOR(
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_COMPONENTE NUMBER,    
    PI_ID_INSCRIPCION NUMBER,
    PO_ROW OUT NUMBER
  )AS
  BEGIN
      SELECT  COUNT(*) INTO PO_ROW
      FROM    T_MAEM_INDICADOR_DATA
      WHERE ID_CRITERIO = PI_ID_CRITERIO
          AND ID_CASO = PI_ID_CASO
          AND ID_COMPONENTE = PI_ID_COMPONENTE
          AND ID_INSCRIPCION = PI_ID_INSCRIPCION
          AND FLAG_ESTADO = '1';
  END USP_SEL_VERIFICAR_INDICADOR;
  
  PROCEDURE USP_SEL_CRITERIO_CASO(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
      OPEN PO_REF FOR
      SELECT  *
      FROM    T_GENM_CASO
      WHERE ID_CRITERIO = PI_ID_CRITERIO
            AND FLAG_ESTADO = '1';
  END USP_SEL_CRITERIO_CASO;
  
  PROCEDURE USP_SEL_CRITERIO_DOC(
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
      OPEN PO_REF FOR
      SELECT  *
      FROM    T_GENM_DOCUMENTO
      WHERE ID_CRITERIO = PI_ID_CRITERIO
            AND FLAG_ESTADO = '1';
  END USP_SEL_CRITERIO_DOC;
  
  PROCEDURE USP_PRC_CONV_CRI_CASO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONV_CRI_CASO C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_CASO = PI_ID_CASO)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONV_CRI_CASO
      (ID_CONVOCATORIA, ID_CRITERIO, ID_CASO, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_CASO, PI_FLAG_ESTADO, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_CRI_CASO C SET
      C.FLAG_ESTADO = PI_FLAG_ESTADO,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_CASO = PI_ID_CASO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONV_CRI_CASO;
  
  PROCEDURE USP_PRC_CONV_CRI_CASO_DOC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PI_ID_DOCUMENTO NUMBER,
    PI_FLAG_ESTADO VARCHAR2,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONV_CRI_CASO_DOC C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_CASO = PI_ID_CASO AND C.ID_DOCUMENTO = PI_ID_DOCUMENTO)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONV_CRI_CASO_DOC
      (ID_CONVOCATORIA, ID_CRITERIO, ID_CASO, ID_DOCUMENTO, FLAG_ESTADO, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_CRITERIO, PI_ID_CASO, PI_ID_DOCUMENTO, PI_FLAG_ESTADO, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_CRI_CASO_DOC C SET
      C.FLAG_ESTADO = PI_FLAG_ESTADO,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_CRITERIO = PI_ID_CRITERIO AND C.ID_CASO = PI_ID_CASO AND C.ID_DOCUMENTO = PI_ID_DOCUMENTO;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONV_CRI_CASO_DOC;
  
  PROCEDURE USP_SEL_LIST_CONV_CRI_CASO(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            ID_CONVOCATORIA,
            ID_CASO,
            FLAG_ESTADO
    FROM  T_GEND_CONV_CRI_CASO
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND ID_CRITERIO = PI_ID_CRITERIO AND FLAG_ESTADO = '1'; 
  END USP_SEL_LIST_CONV_CRI_CASO;
  
  PROCEDURE USP_SEL_LIST_CONV_CRI_CASO_DOC(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_CRITERIO NUMBER,
    PI_ID_CASO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_CRITERIO,
            ID_CONVOCATORIA,
            ID_CASO,
            ID_DOCUMENTO,
            FLAG_ESTADO
    FROM  T_GEND_CONV_CRI_CASO_DOC
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND ID_CRITERIO = PI_ID_CRITERIO AND ID_CASO = PI_ID_CASO AND FLAG_ESTADO = '1'; 
  END USP_SEL_LIST_CONV_CRI_CASO_DOC;

  PROCEDURE USP_SEL_LISTA_CONVOCAT_POS(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  I.ID_INSTITUCION,
            I.ID_CONVOCATORIA,
            INS.RAZON_SOCIAL,
            I.FLAG_ESTADO
    FROM  T_GENM_INSCRIPCION I
    INNER JOIN T_GENM_INSTITUCION INS ON I.ID_INSTITUCION = INS.ID_INSTITUCION
    WHERE I.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND I.FLAG_ESTADO = '1'; 
  END USP_SEL_LISTA_CONVOCAT_POS;
  
  PROCEDURE USP_PRC_CONV_EVA_POS(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_USUARIO NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONV_EVA_INST C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_INSTITUCION = PI_ID_INSTITUCION)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONV_EVA_INST
      (ID_CONVOCATORIA, ID_USUARIO, ID_INSTITUCION, REG_USUARIO, REG_FECHA)
      VALUES
      (PI_ID_CONVOCATORIA, PI_ID_USUARIO, PI_ID_INSTITUCION, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_EVA_INST C SET
      C.ID_USUARIO = PI_ID_USUARIO,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_INSTITUCION = PI_ID_INSTITUCION;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONV_EVA_POS;

  PROCEDURE USP_SEL_GET_CONV_EVA_POS(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSTITUCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  ID_INSTITUCION,
            ID_CONVOCATORIA,
            ID_USUARIO
    FROM  T_GEND_CONV_EVA_INST
    WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND ID_INSTITUCION = PI_ID_INSTITUCION AND FLAG_ESTADO = '1'; 
  END USP_SEL_GET_CONV_EVA_POS;

  PROCEDURE USP_SEL_ALL_INSIGNIA(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  
    *
    FROM  T_MAE_INSIGNIA
    WHERE FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_INSIGNIA;
  
  PROCEDURE USP_PRC_CONVOCATORIA_INSIG(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSIGNIA NUMBER,
    PI_PUNTAJE_MIN NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONVOCATORIA_INSIGNIA C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_INSIGNIA = PI_ID_INSIGNIA)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONVOCATORIA_INSIGNIA (ID_CONVOCATORIA, ID_INSIGNIA, PUNTAJE_MIN, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_CONVOCATORIA, PI_ID_INSIGNIA, PI_PUNTAJE_MIN, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONVOCATORIA_INSIGNIA C SET
      C.PUNTAJE_MIN = PI_PUNTAJE_MIN,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_INSIGNIA = PI_ID_INSIGNIA;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONVOCATORIA_INSIG;

  PROCEDURE USP_SEL_LISTA_CONVOCAT_INSIG(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  I.ID_INSIGNIA,
            I.ID_CONVOCATORIA,
            I.PUNTAJE_MIN,
            I.FLAG_ESTADO
    FROM  T_GEND_CONVOCATORIA_INSIGNIA I
    WHERE I.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND I.FLAG_ESTADO = '1'
    ORDER BY I.PUNTAJE_MIN DESC; 
  END USP_SEL_LISTA_CONVOCAT_INSIG;
  
  PROCEDURE USP_SEL_ALL_SUBSECTOR_TIPOEMP(
    PI_ID_SECTOR NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GEND_SUBSECTOR_TIPOEMPRESA
    WHERE ID_SECTOR = PI_ID_SECTOR AND FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_SUBSECTOR_TIPOEMP;
  
  PROCEDURE USP_SEL_ALL_TRABAJADOR_CAMA(
    PI_ID_SUBSECTOR_TIPOEMPRESA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT  *
    FROM  T_GEND_TRABAJADORES_CAMAS
    WHERE ID_SUBSECTOR_TIPOEMPRESA = PI_ID_SUBSECTOR_TIPOEMPRESA AND FLAG_ESTADO = '1'; 
  END USP_SEL_ALL_TRABAJADOR_CAMA;

  PROCEDURE USP_SEL_LISTA_ESTRELLA(
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    *
    FROM  T_MAE_ESTRELLA
    ORDER BY ID_ESTRELLA ASC;
  END USP_SEL_LISTA_ESTRELLA;
  
  PROCEDURE USP_SEL_ALL_SECTOR(
    PO_REF OUT SYS_REFCURSOR
  )AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    *
    FROM  T_MAE_SECTOR;
  END USP_SEL_ALL_SECTOR;
  
  PROCEDURE USP_PRC_CONV_ESTREL_TRAB(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_ESTRELLA NUMBER,
    PI_ID_TRABAJADORES_CAMA NUMBER,
    PI_EMISIONES_MIN NUMBER,
    PI_USUARIO_GUARDAR NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    SELECT
    (SELECT COUNT(*) FROM T_GEND_CONV_ESTREL_TRAB C WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_ESTRELLA = PI_ID_ESTRELLA AND C.ID_TRABAJADORES_CAMA = PI_ID_TRABAJADORES_CAMA)
    INTO vID
    FROM DUAL;
    
    IF vID = 0 THEN
      INSERT INTO T_GEND_CONV_ESTREL_TRAB (ID_CONVOCATORIA, ID_ESTRELLA, ID_TRABAJADORES_CAMA, EMISIONES_MIN, REG_USUARIO, REG_FECHA)
      VALUES (PI_ID_CONVOCATORIA, PI_ID_ESTRELLA, PI_ID_TRABAJADORES_CAMA, PI_EMISIONES_MIN, PI_USUARIO_GUARDAR, SYSDATE);
    ELSE
      UPDATE T_GEND_CONV_ESTREL_TRAB C SET
      C.EMISIONES_MIN = PI_EMISIONES_MIN,
      C.UPD_USUARIO = PI_USUARIO_GUARDAR,
      C.UPD_FECHA = SYSDATE
      WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.ID_ESTRELLA = PI_ID_ESTRELLA AND C.ID_TRABAJADORES_CAMA = PI_ID_TRABAJADORES_CAMA;
    END IF;
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_PRC_CONV_ESTREL_TRAB;
  
  PROCEDURE USP_SEL_LISTA_CONV_EST_TRAB(
    PI_ID_CONVOCATORIA NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    *
    FROM  T_GEND_CONV_ESTREL_TRAB C
    WHERE C.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND C.FLAG_ESTADO = '1';
  END USP_SEL_LISTA_CONV_EST_TRAB;
END PKG_SISSELLO_MANTENIMIENTO;

/

prompt
prompt Creating package body PKG_SISSELLO_VERIFICACION
prompt ==========================================
prompt
CREATE OR REPLACE PACKAGE BODY SISSELLO."PKG_SISSELLO_VERIFICACION" AS
  PROCEDURE USP_INS_REGISTRA_CONVOCATORIATRAZABILIDAD(
    PI_ID_CONVOCATORIA NUMBER,
    PI_DESCRIPCION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
    vID NUMBER;
  BEGIN
    vID := SQ_GEND_CONVOCATORIA_TRAZA.NEXTVAL();
    
    INSERT INTO T_GEND_CONVOCATORIA_TRAZA
    (ID_CONVOCATORIA, ID_TRAZABILIDAD, DESCRIPCION, REG_USUARIO)
    VALUES
    (PI_ID_CONVOCATORIA, vID, PI_DESCRIPCION, PI_UPD_USUARIO);
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_INS_REGISTRA_CONVOCATORIATRAZABILIDAD;
  
  PROCEDURE USP_SEL_OBTIENE_ULT_CONV(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    C.ID_CONVOCATORIA,
    C.NOMBRE,
    C.DESCRIPCION,
    C.FECHA_INICIO,
    C.FECHA_FIN,
    C.LIMITE_POSTULANTE,
    C.NRO_INFORME,
    C.ID_ETAPA, --ADD
    C.FLAG_ESTADO
    FROM T_GENM_CONVOCATORIA C
    WHERE C.FLAG_ESTADO = '1'
    ORDER BY C.FECHA_INICIO DESC
    OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY;
  END USP_SEL_OBTIENE_ULT_CONV;

  PROCEDURE USP_SEL_RECONOCIMIENTO_MEJORA(
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  )AS
    vID_INSTITUCION NUMBER;
  BEGIN
    SELECT ID_INSTITUCION INTO vID_INSTITUCION FROM T_GENM_INSCRIPCION WHERE ID_INSCRIPCION = PI_ID_INSCRIPCION;
    
    OPEN PO_REF FOR
    SELECT * FROM
    (
    SELECT * FROM T_GENM_RECONOCIMIENTO R
    INNER JOIN T_GENM_INSCRIPCION INS ON R.ID_INSCRIPCION = INS.ID_INSCRIPCION
    WHERE  INS.ID_INSTITUCION = vID_INSTITUCION AND R.ID_INSCRIPCION NOT IN (PI_ID_INSCRIPCION)
    ORDER BY R.ID_RECONOCIMIENTO DESC
    )
    WHERE ROWNUM = 1;
  END USP_SEL_RECONOCIMIENTO_MEJORA;

  PROCEDURE USP_SEL_LISTA_INSC_CONV_EVA(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_USUARIO NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    INS.*, CONV.NOMBRE NOMBRE_CONV, USU.CORREO, USU.NOMBRES || ' ' || USU.APELLIDOS NOMBRES_USU, INST.RAZON_SOCIAL
    FROM  T_GENM_INSCRIPCION INS
    INNER JOIN  T_GENM_CONVOCATORIA CONV ON INS.ID_CONVOCATORIA = CONV.ID_CONVOCATORIA
    INNER JOIN  T_GENM_USUARIO USU ON INS.REG_USUARIO = USU.ID_USUARIO
    INNER JOIN  T_GENM_INSTITUCION INST ON INS.ID_INSTITUCION = INST.ID_INSTITUCION
    WHERE INS.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND INS.ID_INSTITUCION IN (  SELECT ID_INSTITUCION 
                                                                                FROM  T_GEND_CONV_EVA_INST
                                                                                WHERE ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND ID_USUARIO = PI_ID_USUARIO );
  END USP_SEL_LISTA_INSC_CONV_EVA;
  
  PROCEDURE USP_SEL_GET_EVALUACION(
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT
    CCPI.*, C.NOMBRE NOMBRE_CRI
    FROM  T_GEND_CONV_CRI_PUNT_INSC CCPI    
    INNER JOIN  T_GENM_CRITERIO C ON CCPI.ID_CRITERIO = C.ID_CRITERIO
    WHERE CCPI.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND CCPI.ID_INSCRIPCION = PI_ID_INSCRIPCION AND CCPI.ID_TIPO_EVALUACION = 2;
  END USP_SEL_GET_EVALUACION;
  
  PROCEDURE USP_SEL_GET_ADMIN(
    PO_REF OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN PO_REF FOR
    SELECT * FROM 
    (
    SELECT  NOMBRES, APELLIDOS, CORREO
    FROM  T_GENM_USUARIO
    WHERE ID_ROL = 1 AND FLAG_ESTADO = '1'
    ORDER BY ID_USUARIO ASC
    )
    WHERE ROWNUM = 1;
  END USP_SEL_GET_ADMIN;
  
  PROCEDURE USP_SEL_BUSQ_INSCRIPCION (
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_RAZON_SOCIAL_INSTITUCION VARCHAR2,
    PI_NOMBRES_APELLIDOS_USUARIO VARCHAR2,
    PI_ID_USUARIO NUMBER,
    PI_REGISTROS NUMBER,
    PI_PAGINA NUMBER,
    PI_COLUMNA VARCHAR2,
    PI_ORDEN VARCHAR2,
    PO_REF OUT SYS_REFCURSOR
  ) AS
    vTOTAL_REG INTEGER;
    vPAGINA_TOTAL INTEGER;
    vPAGINA_ACTUAL INTEGER := PI_PAGINA;
    vPAGINA_INICIAL INTEGER := 0;
    vQUERY_CONT VARCHAR2(10000) := '';
    vQUERY_SELECT VARCHAR2(10000) := '';
    vCOLUMNA VARCHAR2(200);
  BEGIN
    vQUERY_CONT := 'SELECT  COUNT(1)
                    FROM
                    T_GENM_INSCRIPCION INSC INNER JOIN
                    T_GEND_CONV_EVA_INST CI ON INSC.ID_CONVOCATORIA = CI.ID_CONVOCATORIA AND INSC.ID_INSTITUCION = CI.ID_INSTITUCION INNER JOIN
                    T_GENM_CONVOCATORIA C ON INSC.ID_CONVOCATORIA = C.ID_CONVOCATORIA INNER JOIN
                    T_GENM_USUARIO U ON INSC.REG_USUARIO = U.ID_USUARIO INNER JOIN
                    T_GENM_INSTITUCION INST ON INSC.ID_INSTITUCION = INST.ID_INSTITUCION
                    WHERE
                    CI.ID_USUARIO = ' || PI_ID_USUARIO || ' AND
                    INSC.ID_CONVOCATORIA = ' || PI_ID_CONVOCATORIA || ' AND ' ||
                    CASE
                      WHEN PI_ID_INSCRIPCION IS NOT NULL THEN
                      'INSC.ID_INSCRIPCION = ' || PI_ID_INSCRIPCION || ' AND '
                    END ||
                    'LOWER(TRANSLATE(INST.RAZON_SOCIAL, ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%'' || LOWER(TRANSLATE(''' || PI_RAZON_SOCIAL_INSTITUCION || ''', ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) || ''%'' AND ' ||
                    'LOWER(TRANSLATE(U.NOMBRES || '' '' || U.APELLIDOS, ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%'' || LOWER(TRANSLATE(''' || PI_NOMBRES_APELLIDOS_USUARIO || ''', ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) || ''%'' AND ' ||
                    'INSC.FLAG_ESTADO = ''1''';
    EXECUTE IMMEDIATE vQUERY_CONT INTO vTOTAL_REG;

    vPAGINA_TOTAL := CEIL(TO_NUMBER(vTOTAL_REG) / TO_NUMBER(PI_REGISTROS));
    IF vPAGINA_ACTUAL = 0 THEN
      vPAGINA_ACTUAL := 1;
    END IF;
    IF vPAGINA_ACTUAL > vPAGINA_TOTAL THEN
      vPAGINA_ACTUAL := vPAGINA_TOTAL;
    END IF;

    vPAGINA_INICIAL := vPAGINA_ACTUAL - 1;

    vCOLUMNA := 'INSC.' || PI_COLUMNA;

    vQUERY_SELECT := 'SELECT * FROM
                        (
                          SELECT
                                  INSC.ID_INSCRIPCION,
                                  INSC.ID_INSTITUCION,
                                  INST.RUC AS "RUC_INSTITUCION",
                                  INST.RAZON_SOCIAL AS "RAZON_SOCIAL_INSTITUCION",
                                  INSC.REG_USUARIO,
                                  INSC.REG_FECHA,
                                  C.ID_ETAPA AS "ID_ETAPA_CONVOCATORIA",
                                  U.NOMBRES AS "NOMBRES_USUARIO",
                                  U.APELLIDOS AS "APELLIDOS_USUARIO",
                                  U.CORREO AS "CORREO_USUARIO",
                                  0 AS "CANTIDADCRITERIOSINGRESADOS",
                                  0 AS "PUNTOSACUMULADOS",
                                  ROW_NUMBER() OVER (ORDER BY ' || vCOLUMNA || ' ' || PI_ORDEN ||') AS ROWNUMBER,'
                                  || vPAGINA_TOTAL || ' AS TOTAL_PAGINAS,'
                                  || vPAGINA_ACTUAL || ' AS PAGINA,'
                                  || PI_REGISTROS || ' AS CANTIDAD_REGISTROS,'
                                  || vTOTAL_REG || ' AS TOTAL_REGISTROS
                          FROM
                          T_GENM_INSCRIPCION INSC INNER JOIN
                          T_GEND_CONV_EVA_INST CI ON INSC.ID_CONVOCATORIA = CI.ID_CONVOCATORIA AND INSC.ID_INSTITUCION = CI.ID_INSTITUCION INNER JOIN
                          T_GENM_CONVOCATORIA C ON INSC.ID_CONVOCATORIA = C.ID_CONVOCATORIA INNER JOIN
                          T_GENM_USUARIO U ON INSC.REG_USUARIO = U.ID_USUARIO INNER JOIN
                          T_GENM_INSTITUCION INST ON INSC.ID_INSTITUCION = INST.ID_INSTITUCION
                          WHERE
                          CI.ID_USUARIO = ' || PI_ID_USUARIO || ' AND
                          INSC.ID_CONVOCATORIA = ' || PI_ID_CONVOCATORIA || ' AND ' ||
                          CASE
                            WHEN PI_ID_INSCRIPCION IS NOT NULL THEN
                            'INSC.ID_INSCRIPCION = ' || PI_ID_INSCRIPCION || ' AND '
                          END ||
                          'LOWER(TRANSLATE(INST.RAZON_SOCIAL, ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%'' || LOWER(TRANSLATE(''' || PI_RAZON_SOCIAL_INSTITUCION || ''', ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) || ''%'' AND ' ||
                          'LOWER(TRANSLATE(U.NOMBRES || '' '' || U.APELLIDOS, ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) like ''%'' || LOWER(TRANSLATE(''' || PI_NOMBRES_APELLIDOS_USUARIO || ''', ''ÁÉÍÓÚáéíóú'',''AEIOUaeiou'')) || ''%'' AND ' ||
                          'INSC.FLAG_ESTADO = ''1''
                        )
                    WHERE  ROWNUMBER BETWEEN ' || TO_CHAR(PI_REGISTROS * vPAGINA_INICIAL + 1) || ' AND ' || TO_CHAR(PI_REGISTROS * (vPAGINA_INICIAL + 1));

    OPEN PO_REF FOR vQUERY_SELECT;
  END USP_SEL_BUSQ_INSCRIPCION;
  
  PROCEDURE USP_UPD_EVAL_INSCRIPCION (
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_TIPO_EVALUACION NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GENM_INSCRIPCION I SET
    I.ID_TIPO_EVALUACION = PI_ID_TIPO_EVALUACION,
    I.OBSERVACION = PI_OBSERVACION,
    I.UPD_USUARIO = PI_UPD_USUARIO,
    I.UPD_FECHA = SYSDATE
    WHERE
    I.ID_INSCRIPCION = PI_ID_INSCRIPCION;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_EVAL_INSCRIPCION;
  
  PROCEDURE USP_UPD_EVAL_INSC_REQ (
    PI_ID_CONVOCATORIA NUMBER,
    PI_ID_INSCRIPCION NUMBER,
    PI_ID_REQUERIMIENTO NUMBER,
    PI_VALIDO NUMBER,
    PI_OBSERVACION VARCHAR2,
    PI_UPD_USUARIO NUMBER,
    PO_ROWAFFECTED OUT NUMBER
  ) AS
  BEGIN
    UPDATE T_GEND_INSCRIPCION_REQUERIR IR SET
    IR.VALIDO = PI_VALIDO,
    IR.OBSERVACION = PI_OBSERVACION,
    IR.UPD_USUARIO = PI_UPD_USUARIO,
    IR.UPD_FECHA = SYSDATE
    WHERE
    IR.ID_CONVOCATORIA = PI_ID_CONVOCATORIA AND
    IR.ID_INSCRIPCION = PI_ID_INSCRIPCION AND
    IR.ID_REQUERIMIENTO = PI_ID_REQUERIMIENTO;
    
    PO_ROWAFFECTED := SQL%ROWCOUNT;
  END USP_UPD_EVAL_INSC_REQ;
END PKG_SISSELLO_VERIFICACION;

/


prompt Done
spool off
set define on
